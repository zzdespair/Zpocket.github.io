<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="zzdespair.github.io/"/>
  <updated>2020-09-02T07:13:02.000Z</updated>
  <id>zzdespair.github.io/</id>
  
  <author>
    <name>Zzdespair</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Elasticsearch 笔记</title>
    <link href="zzdespair.github.io/2020/08/06/Elasticsearch-%E5%88%9D%E6%AC%A1%E4%BD%BF%E7%94%A8/"/>
    <id>zzdespair.github.io/2020/08/06/Elasticsearch-%E5%88%9D%E6%AC%A1%E4%BD%BF%E7%94%A8/</id>
    <published>2020-08-06T09:14:31.000Z</published>
    <updated>2020-09-02T07:13:02.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要</p><p>因最近项目需求，开始使用Elasticsearch。</p><p>因此遇到不少坑，和不习惯的地方，本篇文章不定期更细，主要用作笔记和记录</p><a id="more"></a></blockquote><h1 id="Elasticsearch-安装"><a href="#Elasticsearch-安装" class="headerlink" title="Elasticsearch 安装"></a>Elasticsearch 安装</h1><p>此处省略</p><h1 id="Elasticsearch-基本使用"><a href="#Elasticsearch-基本使用" class="headerlink" title="Elasticsearch 基本使用"></a>Elasticsearch 基本使用</h1><h2 id="启动-Elasticsearch"><a href="#启动-Elasticsearch" class="headerlink" title="启动 Elasticsearch"></a>启动 Elasticsearch</h2><p>输入一下指令开启服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart elasticsearch.service</span><br></pre></td></tr></table></figure><p>本地环境是Mac下搭建的Homestead环境，内核信息如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Linux version 4.15.0-96-generic (buildd@lgw01-amd64-004) (gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)) #97-Ubuntu SMP Wed Apr 1 03:25:46 UTC 2020</span><br></pre></td></tr></table></figure><h2 id="初次使用"><a href="#初次使用" class="headerlink" title="初次使用"></a>初次使用</h2><p>创建最简单的数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT "localhost:9200/customer/_doc/1?pretty" -H 'Content-Type: application/json' -d'</span><br><span class="line">&#123;</span><br><span class="line">  "name": "John Doe"</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><p>Es所有Api访问方式都是Http访问，所以使用curl方式连接和传输数据</p><p>如果该请求<code>customer</code>尚不存在，此请求将自动创建该索引，添加ID为的新文档<code>1</code>，并存储该<code>name</code>字段并为其建立索引。</p><p>由于这是一个新文档，因此响应显示该操作的结果是创建了该文档的版本1：</p><p>返回体：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;_index&quot; : &quot;customer&quot;,</span><br><span class="line">  &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">  &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">  &quot;_version&quot; : 1,</span><br><span class="line">  &quot;result&quot; : &quot;created&quot;,</span><br><span class="line">  &quot;_shards&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 2,</span><br><span class="line">    &quot;successful&quot; : 2,</span><br><span class="line">    &quot;failed&quot; : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;_seq_no&quot; : 26,</span><br><span class="line">  &quot;_primary_term&quot; : 4</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新文档可立即从群集中的任何节点使用。您可以使用指定文档ID的GET请求检索它：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET "localhost:9200/customer/_doc/1?pretty"</span><br></pre></td></tr></table></figure><p>该响应表明找到了具有指定ID的文档，并显示了已索引的原始源字段。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span> : <span class="string">"customer"</span>,</span><br><span class="line">  <span class="attr">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">  <span class="attr">"_version"</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">"_seq_no"</span> : <span class="number">26</span>,</span><br><span class="line">  <span class="attr">"_primary_term"</span> : <span class="number">4</span>,</span><br><span class="line">  <span class="attr">"found"</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"_source"</span> : &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"John Doe"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="批量添加文件"><a href="#批量添加文件" class="headerlink" title="批量添加文件"></a>批量添加文件</h2><p>如果您有很多要添加的文档，则可以使用<a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.8/docs-bulk.html">批量API</a>批量提交。使用批量处理批处理文档操作比单独提交请求要快得多，因为它可以最大程度地减少网络往返次数。</p><blockquote><p>最佳批处理大小取决于许多因素：文档大小和复杂性，索引编制和搜索负载以及群集可用的资源。一个好的起点是批处理1,000至5,000个文档，总有效负载在5MB至15MB之间。从那里，您可以尝试找到最佳位置。</p></blockquote><p>要将一些数据导入Elasticsearch，您可以开始搜索和分析：</p><ol><li>下载<a href="https://github.com/elastic/elasticsearch/blob/master/docs/src/test/resources/accounts.json?raw=true"><code>accounts.json</code></a>样本数据集。此随机生成的数据集中的文档代表具有以下信息的用户帐户：</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"account_number"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"balance"</span>: <span class="number">16623</span>,</span><br><span class="line">  <span class="attr">"firstname"</span>: <span class="string">"Bradshaw"</span>,</span><br><span class="line">  <span class="attr">"lastname"</span>: <span class="string">"Mckenzie"</span>,</span><br><span class="line">  <span class="attr">"age"</span>: <span class="number">29</span>,</span><br><span class="line">  <span class="attr">"gender"</span>: <span class="string">"F"</span>,</span><br><span class="line">  <span class="attr">"address"</span>: <span class="string">"244 Columbus Place"</span>,</span><br><span class="line">  <span class="attr">"employer"</span>: <span class="string">"Euron"</span>,</span><br><span class="line">  <span class="attr">"email"</span>: <span class="string">"bradshawmckenzie@euron.com"</span>,</span><br><span class="line">  <span class="attr">"city"</span>: <span class="string">"Hobucken"</span>,</span><br><span class="line">  <span class="attr">"state"</span>: <span class="string">"CO"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><code>bank</code>使用以下<code>_bulk</code>请求将帐户数据添加到索引中：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -H "Content-Type: application/json" -XPOST "localhost:9200/bank/_bulk?pretty&amp;refresh" --data-binary "@accounts.json" </span><br><span class="line"></span><br><span class="line">curl "localhost:9200/_cat/indices?v"</span><br></pre></td></tr></table></figure><p>响应表明成功添加了1,000个文档。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">health status index uuid                   pri rep docs.count docs.deleted store.size pri.store.size</span><br><span class="line">yellow open   bank  l7sSYV2cQXmu6_4rJWVIww   5   1       1000            0    128.6kb        128.6kb</span><br></pre></td></tr></table></figure><h2 id="开始搜索"><a href="#开始搜索" class="headerlink" title="开始搜索"></a>开始搜索</h2><p>将一些数据摄取到Elasticsearch索引后，您可以通过将请求发送到<code>_search</code>端点来对其进行搜索。要访问全套搜索功能，请使用Elasticsearch Query DSL在请求正文中指定搜索条件。您可以在请求URI中指定要搜索的索引的名称。</p><p>例如，以下请求检索<code>bank</code> 按帐号排序的索引中的所有文档：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET "localhost:9200/bank/_search?pretty" -H 'Content-Type: application/json' -d'</span><br><span class="line">&#123;</span><br><span class="line">  "query": &#123; "match_all": &#123;&#125; &#125;,</span><br><span class="line">  "sort": [</span><br><span class="line">    &#123; "account_number": "asc" &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><p>默认情况下，<code>hits</code>响应部分包括与搜索条件匹配的前10个文档：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"took"</span> : <span class="number">63</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_shards"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">"successful"</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">"skipped"</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hits"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : &#123;</span><br><span class="line">        <span class="attr">"value"</span>: <span class="number">1000</span>,</span><br><span class="line">        <span class="attr">"relation"</span>: <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"max_score"</span> : <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">"hits"</span> : [ &#123;</span><br><span class="line">      <span class="attr">"_index"</span> : <span class="string">"bank"</span>,</span><br><span class="line">      <span class="attr">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">      <span class="attr">"_id"</span> : <span class="string">"0"</span>,</span><br><span class="line">      <span class="attr">"sort"</span>: [<span class="number">0</span>],</span><br><span class="line">      <span class="attr">"_score"</span> : <span class="literal">null</span>,</span><br><span class="line">      <span class="attr">"_source"</span> : &#123;<span class="attr">"account_number"</span>:<span class="number">0</span>,<span class="attr">"balance"</span>:<span class="number">16623</span>,<span class="attr">"firstname"</span>:<span class="string">"Bradshaw"</span>,<span class="attr">"lastname"</span>:<span class="string">"Mckenzie"</span>,<span class="attr">"age"</span>:<span class="number">29</span>,<span class="attr">"gender"</span>:<span class="string">"F"</span>,<span class="attr">"address"</span>:<span class="string">"244 Columbus Place"</span>,<span class="attr">"employer"</span>:<span class="string">"Euron"</span>,<span class="attr">"email"</span>:<span class="string">"bradshawmckenzie@euron.com"</span>,<span class="attr">"city"</span>:<span class="string">"Hobucken"</span>,<span class="attr">"state"</span>:<span class="string">"CO"</span>&#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="attr">"_index"</span> : <span class="string">"bank"</span>,</span><br><span class="line">      <span class="attr">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">      <span class="attr">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">      <span class="attr">"sort"</span>: [<span class="number">1</span>],</span><br><span class="line">      <span class="attr">"_score"</span> : <span class="literal">null</span>,</span><br><span class="line">      <span class="attr">"_source"</span> : &#123;<span class="attr">"account_number"</span>:<span class="number">1</span>,<span class="attr">"balance"</span>:<span class="number">39225</span>,<span class="attr">"firstname"</span>:<span class="string">"Amber"</span>,<span class="attr">"lastname"</span>:<span class="string">"Duke"</span>,<span class="attr">"age"</span>:<span class="number">32</span>,<span class="attr">"gender"</span>:<span class="string">"M"</span>,<span class="attr">"address"</span>:<span class="string">"880 Holmes Lane"</span>,<span class="attr">"employer"</span>:<span class="string">"Pyrami"</span>,<span class="attr">"email"</span>:<span class="string">"amberduke@pyrami.com"</span>,<span class="attr">"city"</span>:<span class="string">"Brogan"</span>,<span class="attr">"state"</span>:<span class="string">"IL"</span>&#125;</span><br><span class="line">    &#125;, ...</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该响应还提供有关搜索请求的以下信息：</p><ul><li><code>took</code> – Elasticsearch运行查询所需的时间（以毫秒为单位）</li><li><code>timed_out</code> –搜索请求是否超时</li><li><code>_shards</code> –搜索了多少个分片，以及成功，失败或跳过了多少个分片。</li><li><code>max_score</code> –找到的最相关文件的分数</li><li><code>hits.total.value</code> -找到了多少个匹配的文档</li><li><code>hits.sort</code> -文档的排序位置（不按相关性得分排序时）</li><li><code>hits._score</code>-文档的相关性得分（使用时不适用<code>match_all</code>）</li></ul><p>每个搜索请求都是独立的：Elasticsearch不会在请求中维护任何状态信息。要翻阅搜索结果，请在您的请求中指定<code>from</code>和<code>size</code>参数。</p><p>例如，以下请求的匹配数为10到19：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET "localhost:9200/bank/_search?pretty" -H 'Content-Type: application/json' -d'</span><br><span class="line">&#123;</span><br><span class="line">  "query": &#123; "match_all": &#123;&#125; &#125;,</span><br><span class="line">  "sort": [</span><br><span class="line">    &#123; "account_number": "asc" &#125;</span><br><span class="line">  ],</span><br><span class="line">  "from": 10,</span><br><span class="line">  "size": 10</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><p>现在，您已经了解了如何提交基本的搜索请求，可以开始构建比有趣的查询<code>match_all</code>。</p><p>要在字段中搜索特定术语，可以使用<code>match</code>查询。例如，以下请求搜索该<code>address</code>字段以查找地址包含<code>mill</code>或的客户<code>lane</code>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET "localhost:9200/bank/_search?pretty" -H 'Content-Type: application/json' -d'</span><br><span class="line">&#123;</span><br><span class="line">  "query": &#123; "match": &#123; "address": "mill lane" &#125; &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><p>要执行词组搜索而不是匹配单个词，请使用 <code>match_phrase</code>代替<code>match</code>。例如，以下请求仅匹配包含短语的地址<code>mill lane</code>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET "localhost:9200/bank/_search?pretty" -H 'Content-Type: application/json' -d'</span><br><span class="line">&#123;</span><br><span class="line">  "query": &#123; "match_phrase": &#123; "address": "mill lane" &#125; &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><p>要构造更复杂的查询，可以使用<code>bool</code>查询来组合多个查询条件。您可以根据需要（必须匹配），期望（应匹配）或不期望（必须不匹配）指定条件。</p><p>例如，以下请求在<code>bank</code>索引中搜索属于40岁客户的帐户，但不包括居住在爱达荷州（ID）的任何人：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET "localhost:9200/bank/_search?pretty" -H 'Content-Type: application/json' -d'</span><br><span class="line">&#123;</span><br><span class="line">  "query": &#123;</span><br><span class="line">    "bool": &#123;</span><br><span class="line">      "must": [</span><br><span class="line">        &#123; "match": &#123; "age": "40" &#125; &#125;</span><br><span class="line">      ],</span><br><span class="line">      "must_not": [</span><br><span class="line">        &#123; "match": &#123; "state": "ID" &#125; &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><p>布尔查询中的每个<code>must</code>，<code>should</code>和<code>must_not</code>元素称为查询子句。文档满足每个条款<code>must</code>或 <code>should</code>条款的标准的程度有助于文档的<em>相关性得分</em>。分数越高，文档就越符合您的搜索条件。默认情况下，Elasticsearch返回按这些相关性分数排名的文档。</p><p><code>must_not</code>子句中的条件被视为<em>过滤器</em>。它影响文件是否包含在结果中，但不会影响文件的评分方式。您还可以显式指定任意过滤器，以基于结构化数据包括或排除文档。</p><p>例如，以下请求使用范围过滤器将结果限制为余额在20,000美元到30,000美元（含）之间的帐户。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET "localhost:9200/bank/_search?pretty" -H 'Content-Type: application/json' -d'</span><br><span class="line">&#123;</span><br><span class="line">  "query": &#123;</span><br><span class="line">    "bool": &#123;</span><br><span class="line">      "must": &#123; "match_all": &#123;&#125; &#125;,</span><br><span class="line">      "filter": &#123;</span><br><span class="line">        "range": &#123;</span><br><span class="line">          "balance": &#123;</span><br><span class="line">            "gte": 20000,</span><br><span class="line">            "lte": 30000</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><h2 id="使用聚合"><a href="#使用聚合" class="headerlink" title="使用聚合"></a>使用聚合</h2><p>Elasticsearch聚合使您能够获取有关搜索结果的元信息，并回答诸如“德克萨斯州有多少个帐户持有人？”之类的问题。或“田纳西州的平均帐户余额是多少？” 您可以在一个请求中搜索文档，过滤命中并使用汇总分析结果。</p><p>例如，以下请求使用<code>terms</code>汇总将<code>bank</code>索引中的所有帐户按状态分组，并按降序返回帐户数量最多的十个州：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET "localhost:9200/bank/_search?pretty" -H 'Content-Type: application/json' -d'</span><br><span class="line">&#123;</span><br><span class="line">  "size": 0,</span><br><span class="line">  "aggs": &#123;</span><br><span class="line">    "group_by_state": &#123;</span><br><span class="line">      "terms": &#123;</span><br><span class="line">        "field": "state.keyword"</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><p><code>buckets</code>响应中的是的值<code>state</code>字段中。该 <code>doc_count</code>节目在每个州帐户数量。例如，您可以看到<code>ID</code>（爱达荷州）有27个帐户。因为请求set <code>size=0</code>，所以响应仅包含聚合结果。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"took"</span>: <span class="number">29</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_shards"</span>: &#123;</span><br><span class="line">    <span class="attr">"total"</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="attr">"successful"</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="attr">"skipped"</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"failed"</span>: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hits"</span> : &#123;</span><br><span class="line">     <span class="attr">"total"</span> : &#123;</span><br><span class="line">        <span class="attr">"value"</span>: <span class="number">1000</span>,</span><br><span class="line">        <span class="attr">"relation"</span>: <span class="string">"eq"</span></span><br><span class="line">     &#125;,</span><br><span class="line">    <span class="attr">"max_score"</span> : <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">"hits"</span> : [ ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"aggregations"</span> : &#123;</span><br><span class="line">    <span class="attr">"group_by_state"</span> : &#123;</span><br><span class="line">      <span class="attr">"doc_count_error_upper_bound"</span>: <span class="number">20</span>,</span><br><span class="line">      <span class="attr">"sum_other_doc_count"</span>: <span class="number">770</span>,</span><br><span class="line">      <span class="attr">"buckets"</span> : [ &#123;</span><br><span class="line">        <span class="attr">"key"</span> : <span class="string">"ID"</span>,</span><br><span class="line">        <span class="attr">"doc_count"</span> : <span class="number">27</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        <span class="attr">"key"</span> : <span class="string">"TX"</span>,</span><br><span class="line">        <span class="attr">"doc_count"</span> : <span class="number">27</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        <span class="attr">"key"</span> : <span class="string">"AL"</span>,</span><br><span class="line">        <span class="attr">"doc_count"</span> : <span class="number">25</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        <span class="attr">"key"</span> : <span class="string">"MD"</span>,</span><br><span class="line">        <span class="attr">"doc_count"</span> : <span class="number">25</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        <span class="attr">"key"</span> : <span class="string">"TN"</span>,</span><br><span class="line">        <span class="attr">"doc_count"</span> : <span class="number">23</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        <span class="attr">"key"</span> : <span class="string">"MA"</span>,</span><br><span class="line">        <span class="attr">"doc_count"</span> : <span class="number">21</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        <span class="attr">"key"</span> : <span class="string">"NC"</span>,</span><br><span class="line">        <span class="attr">"doc_count"</span> : <span class="number">21</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        <span class="attr">"key"</span> : <span class="string">"ND"</span>,</span><br><span class="line">        <span class="attr">"doc_count"</span> : <span class="number">21</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        <span class="attr">"key"</span> : <span class="string">"ME"</span>,</span><br><span class="line">        <span class="attr">"doc_count"</span> : <span class="number">20</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        <span class="attr">"key"</span> : <span class="string">"MO"</span>,</span><br><span class="line">        <span class="attr">"doc_count"</span> : <span class="number">20</span></span><br><span class="line">      &#125; ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>您可以组合聚合以构建更复杂的数据汇总。例如，以下请求将一个<code>avg</code>聚合嵌套在先前的 <code>group_by_state</code>聚合中，以计算每个状态的平均帐户余额。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET "localhost:9200/bank/_search?pretty" -H 'Content-Type: application/json' -d'</span><br><span class="line">&#123;</span><br><span class="line">  "size": 0,</span><br><span class="line">  "aggs": &#123;</span><br><span class="line">    "group_by_state": &#123;</span><br><span class="line">      "terms": &#123;</span><br><span class="line">        "field": "state.keyword"</span><br><span class="line">      &#125;,</span><br><span class="line">      "aggs": &#123;</span><br><span class="line">        "average_balance": &#123;</span><br><span class="line">          "avg": &#123;</span><br><span class="line">            "field": "balance"</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><p>您可以通过指定<code>terms</code>聚合内的顺序来使用嵌套聚合的结果进行排序，而不是按计数对结果进行排序：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET "localhost:9200/bank/_search?pretty" -H 'Content-Type: application/json' -d'</span><br><span class="line">&#123;</span><br><span class="line">  "size": 0,</span><br><span class="line">  "aggs": &#123;</span><br><span class="line">    "group_by_state": &#123;</span><br><span class="line">      "terms": &#123;</span><br><span class="line">        "field": "state.keyword",</span><br><span class="line">        "order": &#123;</span><br><span class="line">          "average_balance": "desc"</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      "aggs": &#123;</span><br><span class="line">        "average_balance": &#123;</span><br><span class="line">          "avg": &#123;</span><br><span class="line">            "field": "balance"</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><p>除了这些基本的存储桶和指标聚合外，Elasticsearch还提供了专门的聚合，用于在多个字段上操作并分析特定类型的数据，例如日期，IP地址和地理数据。您还可以将单个聚合的结果馈送到管道聚合中，以进行进一步分析。</p><p>聚合提供的核心分析功能可启用高级功能，例如使用机器学习来检测异常。</p><h1 id="Elasticsearch-搜索"><a href="#Elasticsearch-搜索" class="headerlink" title="Elasticsearch 搜索"></a>Elasticsearch 搜索</h1><h2 id="URL搜索"><a href="#URL搜索" class="headerlink" title="URL搜索"></a>URL搜索</h2><p>通过查询参数提供查询。URI搜索往往更简单，最适合测试。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET "localhost:9200/my-index-000001/_search?q=user.id:kimchy&amp;pretty"</span><br></pre></td></tr></table></figure><p>转换为DSL搜索就是</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET "localhost:9200/my-index-000001,my-index-000002/_search?pretty" -H 'Content-Type: application/json' -d'</span><br><span class="line">&#123;</span><br><span class="line">  "query": &#123;</span><br><span class="line">    "match": &#123;</span><br><span class="line">      "user.id": "kimchy"</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><h2 id="Request-body-searches-DSL搜索"><a href="#Request-body-searches-DSL搜索" class="headerlink" title="Request body searches (DSL搜索)"></a>Request body searches (DSL搜索)</h2><p>通过API请求的JSON主体提供查询。这些查询是用<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html">查询DSL</a>编写的。在日常项目开发中请求正文搜索是重中之重。</p><h3 id="source-过滤字段"><a href="#source-过滤字段" class="headerlink" title="_source 过滤字段"></a>_source 过滤字段</h3><p>默认情况下，搜索响应中的每个<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-source-field.html"><code>_source</code></a>匹配都包含document ，这是对文档建立索引时提供的整个JSON对象。如果在搜索响应中仅需要某些源字段，则可以使用<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-fields.html#source-filtering">源过滤</a>来限制返回源的哪些部分。</p><p>仅使用文档源返回字段有一些限制：</p><ul><li>该<code>_source</code>字段不包含<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/multi-fields.html">多字段</a>或 <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/alias.html">字段别名</a>。同样，源中的字段也不包含使用<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/copy-to.html"><code>copy_to</code></a>映射参数复制的值。</li><li>由于<code>_source</code>在lucene中将_s存储为单个字段，因此即使仅需要少量字段，也必须加载和解析整个源对象。</li></ul><p>为避免这些限制，您可以：</p><ul><li>使用<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-fields.html#docvalue-fields"><code>docvalue_fields</code></a> 参数获取选定字段的值。当返回相当少量的支持doc值的字段（例如关键字和日期）时，这是一个不错的选择。</li><li>使用<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-fields.html#stored-fields"><code>stored_fields</code></a>参数获取特定存储字段的值。（使用<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-store.html"><code>store</code></a>映射选项的字段。）</li></ul><p>使用场景：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET "localhost:9200/_search?pretty" -H 'Content-Type: application/json' -d'</span><br><span class="line">&#123;</span><br><span class="line">  "_source": &#123;</span><br><span class="line">    "includes": [ "obj1.*", "obj2.*" ],</span><br><span class="line">    "excludes": [ "*.description" ]</span><br><span class="line">  &#125;,</span><br><span class="line">  "query": &#123;</span><br><span class="line">    "term": &#123;</span><br><span class="line">      "user.id": "kimchy"</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><table><thead><tr><th>名词</th><th>解释</th></tr></thead><tbody><tr><td>_source</td><td>源过滤    若传值为false，不返回全部资源</td></tr><tr><td>includes</td><td>则仅返回与其模式之一匹配的源字段</td></tr><tr><td>excludes</td><td>从子集中排除字段</td></tr></tbody></table><h3 id="aggs-聚合"><a href="#aggs-聚合" class="headerlink" title="aggs 聚合"></a>aggs 聚合</h3><p>聚合功能为ES注入了统计分析的血统，使用户在面对<a href="http://lib.csdn.net/base/hadoop">大数据</a>提取统计指标时变得游刃有余。聚合允许我们向数据提出一些複杂的问题，虽然他的功能完全不同于搜索，但他们其实使用了相同的数据结构，这表示聚合的执行速度很快，并且就像搜索一样几乎是实时的。</p><p>聚合的两个主要的概念，分别是 桶 和 指标</p><ul><li>桶(Buckets) : 满足特定条件的文档的集合<ul><li>当聚合开始被执行，每个文档会决定符合哪个桶的条件，如果匹配到，文档将放入相应的桶并接着进行聚合操作<ul><li>像是一个员工属于男性桶或者女性桶，日期2014-10-28属于十月桶，也属于2014年桶</li></ul></li><li>桶可以被嵌套在其他桶里面<ul><li>像是北京能放在中国桶裡，而中国桶能放在亚洲桶裡</li></ul></li><li>Elasticsearch提供了很多种类型的桶，像是时间、最受欢迎的词、年龄区间、地理位置桶等等，不过他们在根本上都是通过同样的原理进行操作，也就是基于条件来划分文档，一个文档只要符合条件，就可以加入那个桶，因此一个文档可以同时加入很多桶</li></ul></li><li>指标(Metrics) : 对桶内的文档进行统计计算<ul><li>桶能让我们划分文档到有意义的集合， 但是最终我们需要的是对这些桶内的文档进行一些指标的计算</li><li>指标通常是简单的数学运算(像是min、max、avg、sum），而这些是通过当前桶中的文档的值来计算的，利用指标能让你计算像平均薪资、最高出售价格、95%的查询延迟这样的数据</li></ul></li></ul><p>aggs 聚合的模板</p><ul><li>当query和aggs一起存在时，会先执行query的主查询，主查询query执行完后会搜出一批结果，而这些结果才会被拿去aggs拿去做聚合<ul><li>另外要注意aggs后面会先接一层自定义的这个聚合的名字，然后才是接上要使用的聚合桶</li><li>如果有些情况不在意查询结果是什麽，而只在意aggs的结果，可以把size设为0，如此可以让返回的hits结果集是0，加快返回的速度</li></ul></li><li>一个aggs裡可以有很多个聚合，每个聚合彼此间都是独立的，因此可以一个聚合拿来统计数量、一个聚合拿来分析数据、一个聚合拿来计算标准差…，让一次搜索就可以把想要做的事情一次做完<ul><li>像是此例就定义了3个聚合，分别是custom_name1、custom_name2、custom_name3</li></ul></li><li>aggs可以嵌套在其他的aggs裡面，而嵌套的桶能作用的文档集范围，是外层的桶所输出的结果集 </li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">GET <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/mytest/doc/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"query"</span>: &#123; ... &#125;,</span><br><span class="line">    <span class="string">"size"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">"aggs"</span>: &#123;</span><br><span class="line">        <span class="string">"custom_name1"</span>: &#123;   <span class="comment">// aggs后面接著的是一个自定义的name</span></span><br><span class="line">            <span class="string">"桶"</span>: &#123; ... &#125;    <span class="comment">// 再来才是接桶</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"custom_name2"</span>: &#123;   <span class="comment">// 一个aggs裡可以有很多聚合</span></span><br><span class="line">            <span class="string">"桶"</span>: &#123; ... &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"custom_name3"</span>: &#123;</span><br><span class="line">            <span class="string">"桶"</span>: &#123;</span><br><span class="line">               .....</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"aggs"</span>: &#123;   <span class="comment">// aggs可以嵌套在别的aggs裡面</span></span><br><span class="line">                <span class="string">"in_name"</span>: &#123;  <span class="comment">// 记得使用aggs需要先自定义一个name</span></span><br><span class="line">                    <span class="string">"桶"</span>: &#123; ... &#125;  <span class="comment">// in_name的桶作用的文档是custom_name3的桶的结果</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回体</p> <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"hits"</span>: &#123;</span><br><span class="line">      <span class="attr">"total"</span>: <span class="number">8</span>,</span><br><span class="line">      <span class="attr">"max_score"</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">"hits"</span>: [] <span class="comment">//因为size设为0，所以没有查询结果返回</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"aggregations"</span>: &#123;</span><br><span class="line">      <span class="attr">"custom_name1"</span>: &#123;</span><br><span class="line">          ...</span><br><span class="line">      &#125;,</span><br><span class="line">      "custom_name2": &#123;</span><br><span class="line">          ...</span><br><span class="line">      &#125;,</span><br><span class="line">      "custom_name3": &#123;</span><br><span class="line">          ... ,</span><br><span class="line">          "in_name": &#123;</span><br><span class="line">             ....</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>完整例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">GET /metric.*/_search  <span class="comment">// 指定index查询</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"size"</span>:<span class="number">0</span>,        <span class="comment">// 返回数限定0</span></span><br><span class="line">  <span class="string">"aggs"</span>: &#123; <span class="comment">// 聚合开启关键字，固定格式</span></span><br><span class="line">    <span class="string">"2"</span>: &#123;<span class="comment">// 对这个聚合起名字</span></span><br><span class="line">      <span class="string">"date_histogram"</span>: &#123;<span class="comment">// 这个聚合的类型 ，这里是时间直方图聚合</span></span><br><span class="line">        <span class="string">"fixed_interval"</span>: <span class="string">"1d"</span>,<span class="comment">// 该聚合类型内的关键字，在各个类型内有详解</span></span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"datetime"</span>,</span><br><span class="line">        <span class="string">"min_doc_count"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">"time_zone"</span>: <span class="string">"Asia/Shanghai"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"aggs"</span>: &#123;----</span><br><span class="line">        <span class="string">"avg_grade"</span>: &#123;|</span><br><span class="line">          <span class="string">"avg"</span>: &#123;|</span><br><span class="line">            <span class="string">"field"</span>: <span class="string">"value"</span>|</span><br><span class="line">          &#125;  |</span><br><span class="line">        &#125;,|</span><br><span class="line">        <span class="string">"max_price"</span>: &#123; |</span><br><span class="line">            <span class="string">"max"</span>: &#123;|--&gt; <span class="comment">// 针对上面聚合后产生的文档，再次进行聚合操作</span></span><br><span class="line">                <span class="string">"field"</span>: <span class="string">"value"</span>|</span><br><span class="line">            &#125;|</span><br><span class="line">        &#125;,|</span><br><span class="line">        <span class="string">"min_price"</span>: &#123; |</span><br><span class="line">            <span class="string">"min"</span>: &#123;|</span><br><span class="line">                <span class="string">"field"</span>: <span class="string">"value"</span>|</span><br><span class="line">            &#125;|</span><br><span class="line">        &#125;|</span><br><span class="line">      &#125;                                         ----</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//"3": &#123;&#125;                          ---</span></span><br><span class="line">    <span class="comment">//"4": &#123;  &#125;| --&gt; // 对文档进行其他聚合</span></span><br><span class="line">    <span class="comment">//"5": &#123;  &#125;---</span></span><br><span class="line">  &#125;, </span><br><span class="line">  <span class="string">"_source"</span>: &#123;<span class="comment">// 过滤设置</span></span><br><span class="line">    <span class="string">"includes"</span>: [</span><br><span class="line">      <span class="string">"value"</span>,</span><br><span class="line">      <span class="string">"datetime"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"excludes"</span>: []</span><br><span class="line">  &#125;,</span><br><span class="line"> </span><br><span class="line">  <span class="string">"query"</span>: &#123;<span class="comment">// 查询</span></span><br><span class="line">    <span class="string">"bool"</span>: &#123;</span><br><span class="line">      <span class="string">"filter"</span>: &#123;</span><br><span class="line">        <span class="string">"range"</span>: &#123;</span><br><span class="line">          <span class="string">"datetime"</span>: &#123;</span><br><span class="line">            <span class="string">"time_zone"</span>: <span class="string">"Asia/Shanghai"</span>,</span><br><span class="line">            <span class="string">"format"</span>:<span class="string">"yyyy-MM-dd HH:mm:ss"</span>,</span><br><span class="line">            <span class="string">"gte"</span>: <span class="string">"2020-07-28 19:46:08"</span>,</span><br><span class="line">            <span class="string">"lte"</span>: <span class="string">"2020-07-31 20:46:08"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;, </span><br><span class="line">      <span class="string">"must"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"match"</span>: &#123;</span><br><span class="line">            <span class="string">"sname"</span>: <span class="string">"gwaf_monitor_srv"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"match"</span>: &#123;</span><br><span class="line">            <span class="string">"mname"</span>: <span class="string">"server_monitor"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"match"</span>: &#123;</span><br><span class="line">            <span class="string">"iname"</span>: <span class="string">"mem"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"sort"</span>: [<span class="comment">// 排序</span></span><br><span class="line">    &#123; <span class="string">"datetime"</span>: <span class="string">"asc"</span> &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"took"</span> : <span class="number">6</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_shards"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : <span class="number">24</span>,</span><br><span class="line">    <span class="attr">"successful"</span> : <span class="number">24</span>,</span><br><span class="line">    <span class="attr">"skipped"</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hits"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : &#123;</span><br><span class="line">      <span class="attr">"value"</span> : <span class="number">3012</span>,</span><br><span class="line">      <span class="attr">"relation"</span> : <span class="string">"eq"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"max_score"</span> : <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">"hits"</span> : [ ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"aggregations"</span> : &#123;</span><br><span class="line">    <span class="attr">"2"</span> : &#123;</span><br><span class="line">      <span class="attr">"buckets"</span> : [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key_as_string"</span> : <span class="string">"2020-07-29 00:00:00"</span>,</span><br><span class="line">          <span class="attr">"key"</span> : <span class="number">1595952000000</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">1175</span>,</span><br><span class="line">          <span class="attr">"max_price"</span> : &#123;</span><br><span class="line">            <span class="attr">"value"</span> : <span class="number">292276.0</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">"min_price"</span> : &#123;</span><br><span class="line">            <span class="attr">"value"</span> : <span class="number">5144.0</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">"avg_grade"</span> : &#123;</span><br><span class="line">            <span class="attr">"value"</span> : <span class="number">13365.889361702128</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key_as_string"</span> : <span class="string">"2020-07-30 00:00:00"</span>,</span><br><span class="line">          <span class="attr">"key"</span> : <span class="number">1596038400000</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">1432</span>,</span><br><span class="line">          <span class="attr">"max_price"</span> : &#123;</span><br><span class="line">            <span class="attr">"value"</span> : <span class="number">188092.0</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">"min_price"</span> : &#123;</span><br><span class="line">            <span class="attr">"value"</span> : <span class="number">5436.0</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">"avg_grade"</span> : &#123;</span><br><span class="line">            <span class="attr">"value"</span> : <span class="number">10735.731843575419</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key_as_string"</span> : <span class="string">"2020-07-31 00:00:00"</span>,</span><br><span class="line">          <span class="attr">"key"</span> : <span class="number">1596124800000</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span> : <span class="number">405</span>,</span><br><span class="line">          <span class="attr">"max_price"</span> : &#123;</span><br><span class="line">            <span class="attr">"value"</span> : <span class="number">23408.0</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">"min_price"</span> : &#123;</span><br><span class="line">            <span class="attr">"value"</span> : <span class="number">5648.0</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">"avg_grade"</span> : &#123;</span><br><span class="line">            <span class="attr">"value"</span> : <span class="number">9392.266666666666</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="常用桶"><a href="#常用桶" class="headerlink" title="常用桶"></a>常用桶</h4><h5 id="terms-桶"><a href="#terms-桶" class="headerlink" title="terms 桶"></a>terms 桶</h5><p>针对某个field的值进行分组，field有几种值就分成几组</p><ul><li>terms桶在进行分组时，会爲此field中的每种值创建一个新的桶</li><li>要注意此 “terms桶” 和平常用在主查询query中的 “查找terms” 是不同的东西</li></ul><p>具体实例，先插入数据</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attr">"color"</span>: <span class="string">"red"</span> &#125;</span><br><span class="line">&#123; <span class="attr">"color"</span>: <span class="string">"green"</span> &#125;</span><br><span class="line">&#123; <span class="attr">"color"</span>: [<span class="string">"red"</span>, <span class="string">"blue"</span>] &#125;</span><br></pre></td></tr></table></figure><p>执行搜索</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">GET <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/mytest/doc/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"query"</span>: &#123;</span><br><span class="line">        <span class="string">"match_all"</span>: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"size"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">"aggs"</span>: &#123;</span><br><span class="line">        <span class="string">"my_name"</span>: &#123;</span><br><span class="line">            <span class="string">"terms"</span>: &#123;</span><br><span class="line">                <span class="string">"field"</span>: <span class="string">"color"</span>   <span class="comment">// 使用color来进行分组</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>terms</code>聚合应该是字段类型<code>keyword</code>或适用于存储桶聚合的任何其他数据类型。为了与它一起使用，<code>text</code>您将需要启用 <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/fielddata.html">fielddata</a></li></ul><p>结果</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">  "aggregations": &#123;</span><br><span class="line">    "my_name": &#123;</span><br><span class="line">        "doc_count_error_upper_bound": 0,</span><br><span class="line">        "sum_other_doc_count": 0,</span><br><span class="line">        "buckets": [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"key"</span>: <span class="string">"blue"</span>,</span><br><span class="line">                <span class="attr">"doc_count"</span>: <span class="number">1</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"key"</span>: <span class="string">"red"</span>,</span><br><span class="line">                <span class="attr">"doc_count"</span>: <span class="number">2</span>  <span class="comment">//表示color为red的文档有2个，此例中就是 &#123;"color": "red"&#125; 和 &#123;"color": ["red", "blue"]&#125;这两个文档</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"key"</span>: <span class="string">"green"</span>,</span><br><span class="line">                <span class="attr">"doc_count"</span>: <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>因为color总共有3种值，red、blue、green，所以terms桶为他们产生了3个bucket，并计算了每个bucket中符合的文档有哪些</li><li>bucket和bucket间是独立的，也就是说一个文档可以同时符合好几个bucket，像是<code>{&quot;color&quot;: [&quot;red&quot;, &quot;blue&quot;]}</code>就同时符合了red和blue bucket</li></ul><table><thead><tr><th>参数</th><th>解释</th><th>例子</th></tr></thead><tbody><tr><td>field</td><td>分组依据</td><td>“field”: “color”</td></tr><tr><td>order</td><td>可根据 _count, _key 使用 asc,desc  或者聚合名词 例1</td><td>“order”: { “_count”: “asc” }</td></tr><tr><td>min_doc_count</td><td>最小文件数</td><td>“min_doc_count”: 10</td></tr><tr><td>missing</td><td>将缺少参数赋予值</td><td>“missing”: “N/A”</td></tr></tbody></table><p>order例子 1：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"aggs"</span>: &#123;</span><br><span class="line">    <span class="string">"genres"</span>: &#123;</span><br><span class="line">      <span class="string">"terms"</span>: &#123;</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"genre"</span>,</span><br><span class="line">        <span class="string">"order"</span>: &#123; <span class="string">"max_play_count"</span>: <span class="string">"desc"</span> &#125;  </span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"aggs"</span>: &#123;</span><br><span class="line">        <span class="string">"max_play_count"</span>: &#123; <span class="string">"max"</span>: &#123; <span class="string">"field"</span>: <span class="string">"play_count"</span> &#125; &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"aggs"</span>: &#123;</span><br><span class="line">    <span class="string">"genres"</span>: &#123;</span><br><span class="line">      <span class="string">"terms"</span>: &#123;</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"genre"</span>,</span><br><span class="line">        <span class="string">"order"</span>: &#123; <span class="string">"playback_stats.max"</span>: <span class="string">"desc"</span> &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"aggs"</span>: &#123;</span><br><span class="line">        <span class="string">"playback_stats"</span>: &#123; <span class="string">"stats"</span>: &#123; <span class="string">"field"</span>: <span class="string">"play_count"</span> &#125; &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>order其他的高阶用方法参考官方文档<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-terms-aggregation.html">ES官方文档-aggs-order</a></p><h5 id="date-histogram-日期直方图"><a href="#date-histogram-日期直方图" class="headerlink" title="date_histogram 日期直方图"></a>date_histogram 日期直方图</h5><p>例如，以下是一个汇总，要求在日历时间中每个月的存储分区间隔：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">POST /sales/_search?size=<span class="number">0</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"aggs"</span>: &#123;</span><br><span class="line">    <span class="string">"sales_over_time"</span>: &#123;</span><br><span class="line">      <span class="string">"date_histogram"</span>: &#123;</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"date"</span>,    <span class="comment">// 数据中字段名</span></span><br><span class="line">        <span class="string">"calendar_interval"</span>: <span class="string">"month"</span>    <span class="comment">// 间隔时间</span></span><br><span class="line">      <span class="comment">//"fixed_interval": "30d"      固定间隔时间  与calendar_interval同级，不可同时使用</span></span><br><span class="line">        <span class="string">"format"</span>: <span class="string">"yyyy-MM-dd"</span>        <span class="comment">// 指定时间格式</span></span><br><span class="line">        <span class="string">"time_zone"</span>: <span class="string">"Asia/Shanghai"</span>  <span class="comment">// 时区调整</span></span><br><span class="line">        <span class="string">"offset"</span>:    <span class="string">"+6h"</span>            <span class="comment">// 从上午六点开始分组</span></span><br><span class="line">        <span class="string">"min_doc_count"</span>: <span class="number">0</span>,           <span class="comment">// 为空的话则填充0</span></span><br><span class="line">        <span class="string">"extended_bounds"</span>: &#123;<span class="comment">// 需要填充0的范围</span></span><br><span class="line">          <span class="string">"min"</span>: <span class="number">1533556800000</span>,</span><br><span class="line">          <span class="string">"max"</span>: <span class="number">1533806520000</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>calendar_interval 参数</th><th>解释</th></tr></thead><tbody><tr><td><strong>minute (</strong><code>1m</code><strong>)</strong></td><td>分钟</td></tr><tr><td><strong>hour (</strong><code>1h</code><strong>)</strong></td><td>小时</td></tr><tr><td><strong>day (</strong><code>1d</code><strong>)</strong></td><td>天</td></tr><tr><td><strong>week (</strong><code>1w</code><strong>)</strong></td><td>周</td></tr><tr><td><strong>month (</strong><code>1M</code><strong>)</strong></td><td>月</td></tr><tr><td><strong>quarter (</strong><code>1q</code><strong>)</strong></td><td>季</td></tr><tr><td><strong>year (</strong><code>1y</code><strong>)</strong></td><td>年</td></tr></tbody></table><ul><li>fixed_interval 是固定间隔时间</li></ul><p>与日历感知间隔相比，固定间隔是固定数量的SI单位，并且永远不会偏离，无论它们位于日历上的哪个位置。一秒始终由1000毫秒组成。这允许以任意多个受支持单位指定固定间隔。</p><p>但是，这意味着固定的时间间隔不能表示其他单位，例如月份，因为一个月的持续时间不是固定的数量。尝试指定日历间隔（例如月份或季度）将引发异常。</p><table><thead><tr><th>fixed_interval 参数</th><th>解释</th></tr></thead><tbody><tr><td><strong>milliseconds (ms)</strong></td><td>毫秒</td></tr><tr><td><strong>seconds (s)</strong></td><td>定义为1000毫秒</td></tr><tr><td><strong>hours (h)</strong></td><td>所有时间都是从00分00秒开始。定义为每个60分钟（3,600,000毫秒）</td></tr><tr><td><strong>days (d)</strong></td><td>所有时间都是从最早的时间开始，通常是00:00:00（午夜）。定义为24小时（86,400,000毫秒）</td></tr></tbody></table><h5 id="histogram-直方图"><a href="#histogram-直方图" class="headerlink" title="histogram 直方图"></a>histogram 直方图</h5><p>执行汇总时，将评估每个文档的价格字段并将其四舍五入到最接近的存储桶-例如，如果价格为<code>32</code>且存储桶大小为，<code>5</code>则四舍五入将产生结果<code>30</code>，因此文档将“落入”与密钥关联的桶<code>30</code>。为了使它更加正式，这里使用了舍入函数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bucket_key = Math.floor((value - offset) / interval) * interval + offset</span><br></pre></td></tr></table></figure><p><code>interval</code>必须是正的小数，而<code>offset</code>必须在小数<code>[0, interval)</code> （小数大于或等于<code>0</code>且小于<code>interval</code>）</p><p>以下代码段根据产品的“ <code>price</code>间隔”对产品进行“存储桶” <code>50</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /sales/_search?size=<span class="number">0</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"aggs"</span>: &#123;</span><br><span class="line">    <span class="string">"prices"</span>: &#123;</span><br><span class="line">      <span class="string">"histogram"</span>: &#123;</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"price"</span>,</span><br><span class="line">        <span class="string">"interval"</span>: <span class="number">50</span>,</span><br><span class="line">        <span class="string">"extended_bounds"</span>: &#123;   <span class="comment">//限定范围</span></span><br><span class="line">          <span class="string">"min"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"max"</span>: <span class="number">500</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">  "aggregations": &#123;</span><br><span class="line">    "prices": &#123;</span><br><span class="line">      "buckets": [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span>: <span class="number">0.0</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span>: <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span>: <span class="number">50.0</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span>: <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span>: <span class="number">100.0</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span>: <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span>: <span class="number">150.0</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span>: <span class="number">2</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"key"</span>: <span class="number">200.0</span>,</span><br><span class="line">          <span class="attr">"doc_count"</span>: <span class="number">3</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="常用指标聚合"><a href="#常用指标聚合" class="headerlink" title="常用指标聚合"></a>常用指标聚合</h4><h5 id="avg-平均值"><a href="#avg-平均值" class="headerlink" title="avg 平均值"></a>avg 平均值</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST /exams/_search?size=<span class="number">0</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"aggs"</span>: &#123;</span><br><span class="line">    <span class="string">"avg_grade"</span>: &#123; <span class="string">"avg"</span>: &#123; <span class="string">"field"</span>: <span class="string">"grade"</span> &#125; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">  "aggregations": &#123;</span><br><span class="line">    "avg_grade": &#123;</span><br><span class="line">      "value": 75.0</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="max-最大值"><a href="#max-最大值" class="headerlink" title="max 最大值"></a>max 最大值</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST /sales/_search?size=<span class="number">0</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"aggs"</span>: &#123;</span><br><span class="line">    <span class="string">"max_price"</span>: &#123; <span class="string">"max"</span>: &#123; <span class="string">"field"</span>: <span class="string">"price"</span> &#125; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">  "aggregations": &#123;</span><br><span class="line">      "max_price": &#123;</span><br><span class="line">          "value": 200.0</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="min-最小值"><a href="#min-最小值" class="headerlink" title="min 最小值"></a>min 最小值</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST /sales/_search?size=<span class="number">0</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"aggs"</span>: &#123;</span><br><span class="line">    <span class="string">"min_price"</span>: &#123; <span class="string">"min"</span>: &#123; <span class="string">"field"</span>: <span class="string">"price"</span> &#125; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">  "aggregations": &#123;</span><br><span class="line">    "min_price": &#123;</span><br><span class="line">      "value": 10.0</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="sum-总和"><a href="#sum-总和" class="headerlink" title="sum 总和"></a>sum 总和</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /sales/_search?size=<span class="number">0</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"constant_score"</span>: &#123;</span><br><span class="line">      <span class="string">"filter"</span>: &#123;</span><br><span class="line">        <span class="string">"match"</span>: &#123; <span class="string">"type"</span>: <span class="string">"hat"</span> &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"aggs"</span>: &#123;</span><br><span class="line">    <span class="string">"hat_prices"</span>: &#123; <span class="string">"sum"</span>: &#123; <span class="string">"field"</span>: <span class="string">"price"</span> &#125; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">  "aggregations": &#123;</span><br><span class="line">    "hat_prices": &#123;</span><br><span class="line">      "value": 450.0</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="median-absolute-deviation-中位数"><a href="#median-absolute-deviation-中位数" class="headerlink" title="median_absolute_deviation 中位数"></a>median_absolute_deviation 中位数</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">GET reviews/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"size"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">"aggs"</span>: &#123;</span><br><span class="line">    <span class="string">"review_average"</span>: &#123;</span><br><span class="line">      <span class="string">"avg"</span>: &#123;</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"rating"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"review_variability"</span>: &#123;</span><br><span class="line">      <span class="string">"median_absolute_deviation"</span>: &#123;</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"rating"</span> </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">  "aggregations": &#123;</span><br><span class="line">    "review_average": &#123;</span><br><span class="line">      "value": 3.0</span><br><span class="line">    &#125;,</span><br><span class="line">    "review_variability": &#123;</span><br><span class="line">      "value": 2.0</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Query-DSL搜索"><a href="#Query-DSL搜索" class="headerlink" title="Query DSL搜索"></a>Query DSL搜索</h3><p>es的Query DSL以_search为endpoint，主要分为叶子查询语句（Leaf Query) 和 复合查询语句 (Compound query clauses)。</p><h4 id="叶子查询语句（Leaf-Query"><a href="#叶子查询语句（Leaf-Query" class="headerlink" title="叶子查询语句（Leaf Query)"></a><strong>叶子查询语句（Leaf Query)</strong></h4><p>  用于查询某个特定的字段，如 <code>match</code> , <code>term</code> 或 <code>range</code> 等<br>  其中主要包括两类：单词匹配和全文匹配:</p><h5 id="单词匹配-Term-Level-Query"><a href="#单词匹配-Term-Level-Query" class="headerlink" title="单词匹配(Term Level Query)"></a><strong>单词匹配(Term Level Query)</strong></h5><p>不对查询语句进行分词处理，直接匹配该字段的倒排索引，包括term、terms、range查询语句:</p><h6 id="term-query"><a href="#term-query" class="headerlink" title="term query"></a>term query</h6><p>term查询语句不会对查询语句进行分词处理，直接拿查询输入的文本去检索，如下是官方文档测试案例，非常清晰:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"term"</span>: &#123;</span><br><span class="line">      <span class="string">"exact_value"</span>: <span class="string">"Quick Foxes!"</span>   <span class="comment">//如果exact_value字段类型是keyword，则有结果，若为text则无结果</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="terms-query"><a href="#terms-query" class="headerlink" title="terms query"></a>terms query</h6><p>返回在提供的字段中包含一个或多个<strong>确切</strong>术语的文档。该<code>terms</code>查询与<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-term-query.html"><code>term</code>查询</a>相同，除了可以搜索多个值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"terms"</span>: &#123;</span><br><span class="line">      <span class="string">"user.id"</span>: [ <span class="string">"kimchy"</span>, <span class="string">"elkbee"</span> ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 同时支持文档源的查询</p><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td><strong><code>index</code></strong></td><td>（必需，字符串）从中获取字段值的索引名称。</td></tr><tr><td><strong><code>id</code></strong></td><td>（必需，字符串）要从中获取字段值的文档的<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-id-field.html">ID</a>。</td></tr><tr><td><strong><code>path</code></strong></td><td>（必需，字符串）要从中获取字段值的字段名称。Elasticsearch将这些值用作查询的搜索词。如果字段值包含嵌套的内部对象的数组，则可以使用点表示法语法访问这些对象。</td></tr><tr><td><strong><code>routing</code></strong></td><td>（可选，字符串）从中获取术语值的文档的自定义<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-routing-field.html">路由</a>值。如果在为文档建立索引时提供了自定义路由值，则此参数是必需的。</td></tr></tbody></table><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">GET my-index-<span class="number">000001</span>/_search?pretty</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"terms"</span>: &#123;</span><br><span class="line">        <span class="string">"color"</span> : &#123;</span><br><span class="line">            <span class="string">"index"</span> : <span class="string">"my-index-000001"</span>,</span><br><span class="line">            <span class="string">"id"</span> : <span class="string">"2"</span>,</span><br><span class="line">            <span class="string">"path"</span> : <span class="string">"color"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="range-query"><a href="#range-query" class="headerlink" title="range query"></a>range query</h6><p>范围查询主要用于date或number类型的字段查询中，和term、terms查询一样，不进行查询时分词:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"range"</span>: &#123;</span><br><span class="line">      <span class="string">"age"</span>: &#123;</span><br><span class="line">        <span class="string">"gte"</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="string">"lte"</span>: <span class="number">20</span>,</span><br><span class="line">        <span class="string">"boost"</span>: <span class="number">2.0</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td><strong>gt</strong></td><td>（可选）大于</td></tr><tr><td><strong>gte</strong></td><td>（可选）大于或等于</td></tr><tr><td><strong>lt</strong></td><td>（可选）小于</td></tr><tr><td><strong>lte</strong></td><td>（可选）小于或等于</td></tr><tr><td><strong>format</strong></td><td>（可选，字符串）用于转换<code>date</code>查询中的值的日期格式。有关有效语法，请参见<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-date-format.html"><code>format</code></a>。</td></tr><tr><td><strong>time_zone</strong></td><td>（可选，字符串） 用于将查询中的值转换为UTC的<a href="https://en.wikipedia.org/wiki/List_of_UTC_time_offsets">协调世界时（UTC）偏移量</a>或 <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">IANA时区</a><code>date</code>。</td></tr><tr><td><strong>boost</strong></td><td>（可选，float）浮点数，用于降低或增加查询的 <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html#relevance-scores">相关性分数</a>。默认为<code>1.0</code></td></tr></tbody></table><p>在range范围查询中，es提供了一种更加简便的日期计算，now表示当前时间，时间单位y:年，M:月，d:天，H:时，m:分，s:秒，所以now-3y就表示当前时间减去3年后的时间。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"range"</span>: &#123;</span><br><span class="line">      <span class="string">"timestamp"</span>: &#123;</span><br><span class="line">        <span class="string">"time_zone"</span>: <span class="string">"+01:00"</span>,        </span><br><span class="line">        <span class="string">"gte"</span>: <span class="string">"2020-01-01T00:00:00"</span>, </span><br><span class="line">        <span class="string">"lte"</span>: <span class="string">"now"</span>                  </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="prefix-query-词项前缀查询"><a href="#prefix-query-词项前缀查询" class="headerlink" title="prefix query 词项前缀查询"></a>prefix query 词项前缀查询</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123; <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"prefix"</span> : &#123; <span class="string">"user"</span> : <span class="string">"ki"</span> &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="wildcard-query-通配符查询"><a href="#wildcard-query-通配符查询" class="headerlink" title="wildcard query 通配符查询"></a>wildcard query 通配符查询</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"query"</span>: &#123;</span><br><span class="line">        <span class="string">"wildcard"</span> : &#123; <span class="string">"user"</span> : <span class="string">"ki*y"</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"wildcard"</span>: &#123;</span><br><span class="line">      <span class="string">"user"</span>: &#123;</span><br><span class="line">        <span class="string">"value"</span>: <span class="string">"ki*y"</span>,</span><br><span class="line">        <span class="string">"boost"</span>: <span class="number">2</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h6 id="regexp-query-正则查询"><a href="#regexp-query-正则查询" class="headerlink" title="regexp query 正则查询"></a>regexp query 正则查询</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"query"</span>: &#123;</span><br><span class="line">        <span class="string">"regexp"</span>:&#123;</span><br><span class="line">            <span class="string">"name.first"</span>: <span class="string">"s.*y"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"query"</span>: &#123;</span><br><span class="line">        <span class="string">"regexp"</span>:&#123;</span><br><span class="line">            <span class="string">"name.first"</span>:&#123;</span><br><span class="line">                <span class="string">"value"</span>:<span class="string">"s.*y"</span>,</span><br><span class="line">                <span class="string">"boost"</span>:<span class="number">1.2</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正则语法参考：<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-regexp-query.html#regexp-syntax">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-regexp-query.html#regexp-syntax</a></p><h6 id="fuzzy-query-模糊查询"><a href="#fuzzy-query-模糊查询" class="headerlink" title="fuzzy query 模糊查询"></a>fuzzy query 模糊查询</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"query"</span>: &#123;</span><br><span class="line">       <span class="string">"fuzzy"</span> : &#123; <span class="string">"user"</span> : <span class="string">"ki"</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"query"</span>: &#123;</span><br><span class="line">        <span class="string">"fuzzy"</span> : &#123;</span><br><span class="line">            <span class="string">"user"</span> : &#123;</span><br><span class="line">                <span class="string">"value"</span>: <span class="string">"ki"</span>,</span><br><span class="line">                <span class="string">"boost"</span>: <span class="number">1.0</span>,</span><br><span class="line">                <span class="string">"fuzziness"</span>: <span class="number">2</span>,</span><br><span class="line">                <span class="string">"prefix_length"</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="string">"max_expansions"</span>: <span class="number">100</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="ids-根据文档id查询"><a href="#ids-根据文档id查询" class="headerlink" title="ids 根据文档id查询"></a>ids 根据文档id查询</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"query"</span>: &#123;</span><br><span class="line">        <span class="string">"ids"</span> : &#123;</span><br><span class="line">            <span class="string">"type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">            <span class="string">"values"</span> : [<span class="string">"1"</span>, <span class="string">"4"</span>, <span class="string">"100"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="全文匹配-Full-Text-Query"><a href="#全文匹配-Full-Text-Query" class="headerlink" title="全文匹配(Full Text Query)"></a><strong>全文匹配(Full Text Query)</strong></h4><p>对指定的text类型的字段进行全文检索，会先对查询语句进行分词处理，例如你输入的查询文本是”我在马路边”，es在分词器的作用下就会分词为”我”、”在”、”马路”这么几个单词，然后再去匹配。</p><h6 id="match-query"><a href="#match-query" class="headerlink" title="match query"></a><strong>match query</strong></h6><p>match query是最基本的基于全文检索的字段类查询语法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"match"</span>: &#123;</span><br><span class="line">      <span class="string">"message"</span>: &#123;</span><br><span class="line">        <span class="string">"query"</span>: <span class="string">"this is a test"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么这里经过分词后的this、is、a、test各个单词之间就是默认为”或”的匹配关系，可以通过operator关键字来显式设置各个单词间的匹配关系，如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"match"</span>: &#123;</span><br><span class="line">      <span class="string">"message"</span>: &#123;</span><br><span class="line">        <span class="string">"query"</span>: <span class="string">"this is a test"</span>,</span><br><span class="line">        <span class="string">"operator"</span>: <span class="string">"and"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以通过minimum_should_match参数来设置控制需要匹配的单词数，比如你的文档里username存的内容是”this is a java enginer”，那么通过下面的查询语句可以控制查询文本最少要匹配到”java”、”enginer”:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"match"</span>: &#123;</span><br><span class="line">      <span class="string">"message"</span>: &#123;</span><br><span class="line">        <span class="string">"query"</span>: <span class="string">"java enginer"</span>,</span><br><span class="line">        <span class="string">"minimum_should_match"</span>: <span class="number">2</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还可用max_expansions 指定模糊匹配的最大词项数，默认是50。比如：反向索引中有 100 个词项与 ucen 模糊匹配，只选用前50 个。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">GET ftq/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"match"</span>: &#123;</span><br><span class="line">      <span class="string">"content"</span>: &#123;</span><br><span class="line">        <span class="string">"query"</span>: <span class="string">"ucen elatic java"</span>,</span><br><span class="line">        <span class="string">"fuzziness"</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="string">"minimum_should_match"</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="string">"max_expansions "</span>: <span class="number">50</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="match-phrase-query"><a href="#match-phrase-query" class="headerlink" title="match_phrase query"></a><strong>match_phrase query</strong></h6><p>match_phrase也是对字段进行检索，和match的区别在于：match_query是有顺序要求的，而match是无序的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"match_phrase"</span>: &#123;</span><br><span class="line">      <span class="string">"message"</span>: <span class="string">"this is a test"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以通过slop参数来控制单词之间的允许间隔:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"match_phrase"</span>: &#123;</span><br><span class="line">      <span class="string">"message"</span>: &#123;</span><br><span class="line">        <span class="string">"query"</span>: <span class="string">"this is a test"</span>,</span><br><span class="line">        <span class="string">"slop"</span>: <span class="number">2</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="multi-match-query"><a href="#multi-match-query" class="headerlink" title="multi match query"></a>multi match query</h6><p>如果你需要在多个字段上进行文本搜索，可用multi_match 。multi_match在 match的基础上支持对多个字段进行文本查询。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET ftq/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"multi_match"</span> : &#123;</span><br><span class="line">      <span class="string">"query"</span>:    <span class="string">"lucene java"</span>, </span><br><span class="line">      <span class="string">"fields"</span>: [ <span class="string">"title"</span>, <span class="string">"content"</span> ] </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还可以使用*匹配多个字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET ftq/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"multi_match"</span> : &#123;</span><br><span class="line">      <span class="string">"query"</span>:    <span class="string">"lucene java"</span>, </span><br><span class="line">      <span class="string">"fields"</span>: [ <span class="string">"title"</span>, <span class="string">"cont*"</span> ] </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="query-string-query"><a href="#query-string-query" class="headerlink" title="query_string query"></a>query_string query</h6><p>可以使用<code>query_string</code>查询来创建复杂的搜索，其中包括通配符，跨多个字段的搜索等等。尽管用途广泛，但查询是严格的，如果查询字符串包含任何无效语法，则返回错误。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"query_string"</span>: &#123;</span><br><span class="line">      <span class="string">"query"</span>: <span class="string">"(new york city) OR (big apple)"</span>,</span><br><span class="line">      <span class="string">"default_field"</span>: <span class="string">"content"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>搜索多字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"query_string"</span>: &#123;</span><br><span class="line">      <span class="string">"fields"</span>: [ <span class="string">"content"</span>, <span class="string">"name"</span> ],</span><br><span class="line">      <span class="string">"query"</span>: <span class="string">"this AND that"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="复合查询语句-Compound-query-clauses"><a href="#复合查询语句-Compound-query-clauses" class="headerlink" title="复合查询语句 (Compound query clauses)"></a><strong>复合查询语句 (Compound query clauses)</strong></h3><p>  用于合并其他的叶查询或复合查询语句，也就是说复合语句之间可以嵌套，用来表示一个复杂的单一查询，类比mysql的where多条件查询，es的复合查询包括Constant Score Query、<strong>Bool Query</strong>、Dis Max Query、Function Score Query、Boosting Query，这里详细说一说用的比较多的Bool Query。</p><h6 id="Bool-Query"><a href="#Bool-Query" class="headerlink" title="Bool Query"></a>Bool Query</h6><p>Bool 查询用bool操作来组合多个查询字句为一个查询。 可用的关键字：</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>must</td><td>根据must中的条件过滤文档，返回的结果文档必须严格匹配条件，会影响相关性算分</td></tr><tr><td>filter</td><td>根据must中的条件过滤文档，返回的结果文档必须严格匹配条件，和must不同的是，filter不会影响相关性算分</td></tr><tr><td>should</td><td>根据should中的条件进行筛选，返回的结果文档应该包含should的条件，影响相关性 算分</td></tr><tr><td>must_not</td><td>根据must_not中的条件过滤文档，返回的结果文档必须不包含must_not条件，会影响相关性算分</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">POST _search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"bool"</span> : &#123;</span><br><span class="line">      <span class="string">"must"</span> : &#123;</span><br><span class="line">        <span class="string">"term"</span> : &#123; <span class="string">"user"</span> : <span class="string">"kimchy"</span> &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"filter"</span>: &#123;</span><br><span class="line">        <span class="string">"term"</span> : &#123; <span class="string">"tag"</span> : <span class="string">"tech"</span> &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"must_not"</span> : &#123;</span><br><span class="line">        <span class="string">"range"</span> : &#123;</span><br><span class="line">          <span class="string">"age"</span> : &#123; <span class="string">"gte"</span> : <span class="number">10</span>, <span class="string">"lte"</span> : <span class="number">20</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"should"</span> : [</span><br><span class="line">        &#123; <span class="string">"term"</span> : &#123; <span class="string">"tag"</span> : <span class="string">"wow"</span> &#125; &#125;,</span><br><span class="line">        &#123; <span class="string">"term"</span> : &#123; <span class="string">"tag"</span> : <span class="string">"elasticsearch"</span> &#125; &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="string">"minimum_should_match"</span> : <span class="number">1</span>,</span><br><span class="line">      <span class="string">"boost"</span> : <span class="number">1.0</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1、must、must_not、should支持数组，同时filter的查询语句，es会对其进行智能缓存，因此执行效率较高，在不需要算分的查询语句中，可以考虑使用filter替代普通的query语句;</p><p>2、查询语句同时包含must和should时，可以不满足should的条件，因为must条件优先级高于should，但是如果也满足should的条件，则会提高相关性算分;</p><p>3、可以使用minimum_should_match参数来控制应当满足条件的个数或百分比;</p><p>4、must、must_not语句里面如果包含多个条件，则各个条件间是且的关系，而should的多个条件是或的关系。</p><h3 id="Filter和Query的异同"><a href="#Filter和Query的异同" class="headerlink" title="Filter和Query的异同"></a>Filter和Query的异同</h3><p>一个查询语句究竟具有什么样的行为和得到什么结果，主要取决于它到底是处于查询上下文(Query Context) 还是过滤上下文(Filter Context)。</p><ul><li><strong>Query context 查询上下文</strong><br>这种语句在执行时既要计算文档是否匹配，还要计算文档相对于其他文档的匹配度有多高，匹配度越高，<em>_score</em> 分数就越高</li><li><strong>Filter context 过滤上下文</strong><br>过滤上下文中的语句在执行时只关心文档是否和查询匹配，不会计算匹配度，也就是得分。</li></ul><p>下面来看一个例子:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123;                                     <span class="comment">//参数表示整个语句是处于 query context 中</span></span><br><span class="line">    <span class="string">"bool"</span>: &#123; <span class="comment">//bool 和 match 语句被用在 query context 中，也就是说它们会计算每个文档的匹配度（_score)</span></span><br><span class="line">      <span class="string">"must"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"match"</span>: &#123;</span><br><span class="line">            <span class="string">"title"</span>: <span class="string">"Search"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"match"</span>: &#123;</span><br><span class="line">            <span class="string">"content"</span>: <span class="string">"Elasticsearch"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="string">"filter"</span>: [ <span class="comment">//这个子查询处于 filter context 中</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"term"</span>: &#123; <span class="comment">//语句中的 term 和 range 语句用在 filter context 中，它们只起到过滤的作用，并不会计算文档的得分。</span></span><br><span class="line">            <span class="string">"status"</span>: <span class="string">"published"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"range"</span>: &#123;</span><br><span class="line">            <span class="string">"publish_date"</span>: &#123;</span><br><span class="line">              <span class="string">"gte"</span>: <span class="string">"2015-01-01"</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结论：</p><p>1 查询上下文中，查询操作不仅仅会进行查询，还会计算分值，用于确定相关度；在过滤器上下文中，查询操作仅判断是否满足查询条件</p><p>2 过滤器上下文中，查询的结果可以被缓存。</p><h1 id="Elasticsearch-Url地址说明"><a href="#Elasticsearch-Url地址说明" class="headerlink" title="Elasticsearch Url地址说明"></a>Elasticsearch Url地址说明</h1><p>拿以下添加内容命令举例说明</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT "localhost:9200/customer/_doc/1?pretty" -H 'Content-Type: application/json' -d'</span><br><span class="line">&#123;</span><br><span class="line">  "name": "John Doe"</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><table><thead><tr><th>URL</th><th>说明</th></tr></thead><tbody><tr><td>Localhost</td><td>Es服务地址</td></tr><tr><td>/customer</td><td>index名，类似Mysql中的库名</td></tr><tr><td>/_doc</td><td>字段类型</td></tr><tr><td>/1</td><td>id 索引id</td></tr><tr><td>pretty</td><td>将返回的信息以可读的JSON形式返回。</td></tr><tr><td>“name”: “John Doe”</td><td>添加内容</td></tr></tbody></table><h2 id="常用URL句子"><a href="#常用URL句子" class="headerlink" title="常用URL句子"></a>常用URL句子</h2><ul><li><p>获得节集群中的节点列表</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl 'xxx:9200/_cat/nodes?v'</span><br></pre></td></tr></table></figure></li><li><p>检查集群健康</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl 'xxx:9200/_cat/health?v'</span><br></pre></td></tr></table></figure></li><li><p>列出所有的索引</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl 'xxx:9200/_cat/indices?v'</span><br></pre></td></tr></table></figure></li><li><p>查看ES哪些进程在消耗资源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl xxx:9200/_nodes/hot_threads?pretty</span><br></pre></td></tr></table></figure></li><li><p>查看某条语句的性能分析状况</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl xxx:9200/xxx/_search?pretty -d '&#123;"profile": true, "query" : &#123; "match" : &#123; "xxx" : "xxx" &#125; &#125;&#125;'</span><br></pre></td></tr></table></figure></li><li><p>对某个index进行强制合并segment，提高查询效率</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl xxx:9200/xxx/_forcemerge?pretty</span><br></pre></td></tr></table></figure></li><li><p>节点状态查询</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl xxx:9200/_nodes/stats?pretty</span><br></pre></td></tr></table></figure></li></ul><h2 id="常用URL字段"><a href="#常用URL字段" class="headerlink" title="常用URL字段"></a>常用URL字段</h2><h3 id="index操作"><a href="#index操作" class="headerlink" title="index操作"></a>index操作</h3><p>默认之前必须携带index前缀，比如：  /customer/_search</p><table><thead><tr><th>URL</th><th>说明</th></tr></thead><tbody><tr><td>/_search</td><td>搜索</td></tr><tr><td>/_aliases</td><td>获取或操作索引的别名</td></tr><tr><td>/_count</td><td>返回符合条件的文档数</td></tr><tr><td>/type</td><td>创建或操作    类型</td></tr><tr><td>/_mapping</td><td>创建或操作    mapping</td></tr><tr><td>/_settings</td><td>创建或操作    设置  (number_of_shards是不可更改的)</td></tr><tr><td>/_open</td><td>打开被关闭的索引</td></tr><tr><td>/_close</td><td>关闭索引</td></tr><tr><td>/_refresh</td><td>刷新索引（使新加内容对搜索可见）</td></tr><tr><td>/_flush</td><td>刷新索引将变动提交到lucene索引文件中并清空elasticsearch的transaction log，与refresh的区别需要继续研究</td></tr><tr><td>/_optimize</td><td>优化segement，个人认为主要是对segement进行合并</td></tr><tr><td>/_status</td><td>获得索引的状态信息</td></tr><tr><td>/_segments</td><td>获得索引的segments的状态信息</td></tr><tr><td>/_explain</td><td>不执行实际搜索，而返回解释信息</td></tr><tr><td>/_analyze</td><td>不执行实际搜索，根据输入的参数进行文本分析</td></tr><tr><td>/index/type/id</td><td>操作指定文档</td></tr><tr><td>/index/type/id/_create</td><td>创建一个文档，如果该文件已经存在，则返回失败</td></tr><tr><td>/index/type/id/_update</td><td>更新一个文件，如果改文件不存在，则返回失败</td></tr></tbody></table><h3 id="Nodes操作"><a href="#Nodes操作" class="headerlink" title="Nodes操作"></a>Nodes操作</h3><table><thead><tr><th>URL</th><th>说明</th></tr></thead><tbody><tr><td>/_nodes/process</td><td>我主要看file descriptor 这个信息</td></tr><tr><td>/_nodes/process/stats</td><td>统计信息（内存、CPU能）</td></tr><tr><td>/_nodes/jvm</td><td>获得各节点的虚拟机统计和配置信息</td></tr><tr><td>/_nodes/jvm/stats</td><td>更详细的虚拟机信息</td></tr><tr><td>/_nodes/http</td><td>获得各个节点的http信息（如ip地址）</td></tr><tr><td>/_nodes/http/stats</td><td>获得各个节点处理http请求的统计情况</td></tr><tr><td>/_nodes/thread_pool</td><td>获得各种类型的线程池（elasticsearch分别对不同的操作提供不同的线程池）的配置信息</td></tr><tr><td>/_nodes/thread_pool/stats</td><td>获得各种类型的线程池的统计信息</td></tr></tbody></table><p>以上这些操作和可以通过如下方式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">/_nodes/$</span><span class="bash">&#123;nodeId&#125;/jvm/stats</span></span><br><span class="line"></span><br><span class="line"><span class="meta">/_nodes/$</span><span class="bash">&#123;nodeip&#125;/jvm/stats</span></span><br><span class="line"></span><br><span class="line"><span class="meta">/_nodes/$</span><span class="bash">&#123;nodeattribute&#125;/jvm/stats</span></span><br></pre></td></tr></table></figure><p>针对指定节点的操作。</p><h3 id="Distributed操作"><a href="#Distributed操作" class="headerlink" title="Distributed操作"></a>Distributed操作</h3><table><thead><tr><th>URL</th><th>说明</th></tr></thead><tbody><tr><td>/_cluster/nodes</td><td>获得集群中的节点列表和信息</td></tr><tr><td>/_cluster/health</td><td>获得集群信息</td></tr><tr><td>/_cluster/state</td><td>获得集群里的所有信息（集群信息、节点信息、mapping信息等）</td></tr></tbody></table><h1 id="Elasticsearch-返回体说明"><a href="#Elasticsearch-返回体说明" class="headerlink" title="Elasticsearch 返回体说明"></a>Elasticsearch 返回体说明</h1><ul><li><code>took</code> – Elasticsearch运行查询所需的时间（以毫秒为单位）</li><li><code>timed_out</code> –搜索请求是否超时</li><li><code>_shards</code> –搜索了多少个分片，以及成功，失败或跳过了多少个分片。</li><li><code>max_score</code> –找到的最相关文件的分数</li><li><code>hits.total.value</code> -找到了多少个匹配的文档</li><li><code>hits.sort</code> -文档的排序位置（不按相关性得分排序时）</li><li><code>hits._score</code>-文档的相关性得分（使用时不适用<code>match_all</code>）</li></ul><h1 id="Elasticsearch-基本数据类型"><a href="#Elasticsearch-基本数据类型" class="headerlink" title="Elasticsearch 基本数据类型"></a>Elasticsearch 基本数据类型</h1><ul><li>字符串 string</li><li>数字类型 long integer double 等</li><li>日期 date</li><li>布尔类型 boolean</li><li>二进制 binary</li><li>复杂的数据类型<ul><li>数组类型</li><li>对象类型</li><li>嵌套类型 netsted</li><li>地理数据类型</li><li>专门数据类型<ul><li>ipv4</li><li>完成数据类型</li><li>单词计数类型</li></ul></li></ul></li></ul><p>参考文章:  </p><p><a href="https://www.jianshu.com/p/1fe6b4d92e87">ES的常规指令集合</a></p><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/getting-started-index.html">ES官方文档</a></p><p><a href="https://blog.csdn.net/weixin_40341116/article/details/81173016">ES-聚合-aggs</a></p><p><a href="https://www.cnblogs.com/wangshouchang/p/8018537.html">ElasticSearch 系列文章</a></p><p><a href="https://blog.csdn.net/supermao1013/article/details/84261526">DSL介绍</a></p><p><a href="https://blog.csdn.net/fanrenxiang/article/details/86477019">Elastic Search之Search API(Query DSL)、字段类查询、复合查询</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要&lt;/p&gt;
&lt;p&gt;因最近项目需求，开始使用Elasticsearch。&lt;/p&gt;
&lt;p&gt;因此遇到不少坑，和不习惯的地方，本篇文章不定期更细，主要用作笔记和记录&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Elasticsearch" scheme="zzdespair.github.io/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 初次使用记录</title>
    <link href="zzdespair.github.io/2020/08/04/hello-hexo/"/>
    <id>zzdespair.github.io/2020/08/04/hello-hexo/</id>
    <published>2020-08-04T10:13:02.000Z</published>
    <updated>2020-08-05T07:13:02.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="安装前提，首先需要安装两个软件："><a href="#安装前提，首先需要安装两个软件：" class="headerlink" title="安装前提，首先需要安装两个软件："></a>安装前提，首先需要安装两个软件：</h4><ol><li>Node.js        <font size=1>用于安装Hexo</font></li><li>Git                <font size=1>用于代码提交和外网访问</font></li></ol><p>详细的安装方式可自行根据自己的系统百度搜索安装方式，以下是参考网站：</p><p><a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p><h4 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h4><p>以上两个软件装完后，即可通过npm安装Hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install -g hexo-cli</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>然后执行以下命令指定的文件下会自动创建所需要的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo init &lt;folder&gt;  </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> &lt;folder&gt;</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install</span></span><br></pre></td></tr></table></figure><p>运行完成后会出现如下文字：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO Start blogging with Hexo!</span><br></pre></td></tr></table></figure><p>恭喜你，安装完成。</p><p>新建完后，指定文件夹下会出现的文件如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><h3 id="初步使用Hexo"><a href="#初步使用Hexo" class="headerlink" title="初步使用Hexo"></a>初步使用Hexo</h3><h4 id="本地运行Hexo"><a href="#本地运行Hexo" class="headerlink" title="本地运行Hexo"></a>本地运行Hexo</h4><p>安装好后，执行以下命令:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo g <span class="comment">#generate 生成静态文件</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo s <span class="comment">#server 启动服务器。默认情况下，访问网址为： [http://localhost:4000/](https://link.jianshu.com/?t=http://localhost:4000/)</span></span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>出现这段文字即可访问 <a href="http://localhost:4000/">http://localhost:4000</a> , 页面如下</p><p><img src="/images/Hexo%E9%A6%96%E9%A1%B5.jpg" alt=""></p><p>至此，本地Hexo搭建完成</p><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo n <span class="string">"myblog"</span>   <span class="comment"># =&gt; hexo new "myblog"</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo p            <span class="comment"># =&gt; hexo publish</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo g            <span class="comment"># =&gt; hexo generate</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo s            <span class="comment"># =&gt; hexo server</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo d            <span class="comment"># =&gt; hexo deploy</span></span></span><br></pre></td></tr></table></figure><h4 id="服务器命令"><a href="#服务器命令" class="headerlink" title="服务器命令"></a>服务器命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo server                   <span class="comment"># Hexo 会监视文件变动并自动更新，无须重启服务器</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo server -s                <span class="comment"># 静态模式</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo server -p 5000           <span class="comment"># 更改端口</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo server -i 192.168.1.1    <span class="comment"># 自定义 IP</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo clean                    <span class="comment"># 清除缓存，网页正常情况下可以忽略此条命令</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo g                        <span class="comment"># 生成静态网页</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo d                        <span class="comment"># 开始部署</span></span></span><br></pre></td></tr></table></figure><h3 id="连接Hexo和Git"><a href="#连接Hexo和Git" class="headerlink" title="连接Hexo和Git"></a>连接Hexo和Git</h3><h4 id="Git-SSH配置"><a href="#Git-SSH配置" class="headerlink" title="Git SSH配置"></a>Git SSH配置</h4><h5 id="关于SSH"><a href="#关于SSH" class="headerlink" title="关于SSH"></a>关于SSH</h5><p>使用SSH协议，您可以连接到远程服务器和服务并进行身份验证。使用SSH密钥，您可以连接到GitHub，而无需在每次访问时都提供用户名或密码。</p><h5 id="检查现有的SSH密钥"><a href="#检查现有的SSH密钥" class="headerlink" title="检查现有的SSH密钥"></a>检查现有的SSH密钥</h5><p>以下是Mac操作系统：</p><ol><li><p>打开 Terminal.</p></li><li><p>输入<code>ls -al ~/.ssh</code>以查看是否存在现有的SSH密钥：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ls -al ~/.ssh</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Lists the files <span class="keyword">in</span> your .ssh directory, <span class="keyword">if</span> they exist</span></span><br></pre></td></tr></table></figure></li><li><p>检查目录列表，以查看是否已经有公共SSH密钥。默认情况下，公共密钥的文件名是以下之一：</p><ul><li><em>id_rsa.pub</em></li><li><em>id_ecdsa.pub</em></li><li><em>id_ed25519.pub</em></li></ul></li></ol><p>如果您没有现有的公钥和私钥对，或者不希望使用任何可用于连接到GitHub，可以重新申请</p><p>如果您看到列出的现有公共和私有密钥对（例如<em>id_rsa.pub</em>和<em>id_rsa</em>），您希望将它们用于连接到GitHub，则可以将SSH密钥添加到ssh-agent。</p><h5 id="生成新的SSH密钥"><a href="#生成新的SSH密钥" class="headerlink" title="生成新的SSH密钥"></a>生成新的SSH密钥</h5><ol><li><p>打开终端。</p></li><li><p>粘贴以下文本，替换为您的GitHub电子邮件地址。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh-keygen -t rsa -b 4096 -C <span class="string">"your_email@example.com"</span></span></span><br></pre></td></tr></table></figure><p>使用提供的电子邮件作为标签，这将创建一个新的ssh密钥。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> Generating public/private rsa key pair.</span></span><br></pre></td></tr></table></figure></li><li><p>当提示您“输入要在其中保存密钥的文件”时，请按Enter。这接受默认文件位置。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> Enter a file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/Users/you/.ssh/id_rsa): [Press enter]</span></span><br></pre></td></tr></table></figure></li><li><p>在提示符下，键入一个安全密码。有关更多信息，请参阅<a href="https://docs.github.com/en/articles/working-with-ssh-key-passphrases">“使用SSH密钥密码短语”</a>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> Enter passphrase (empty <span class="keyword">for</span> no passphrase): [Type a passphrase]</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Enter same passphrase again: [Type passphrase again]</span></span><br></pre></td></tr></table></figure></li></ol><h5 id="将SSH密钥添加到ssh-agent"><a href="#将SSH密钥添加到ssh-agent" class="headerlink" title="将SSH密钥添加到ssh-agent"></a>将SSH密钥添加到ssh-agent</h5><p>在将新的SSH密钥添加到ssh-agent来管理密钥之前，您应该已经<a href="#检查现有的SSH密钥">检查了现有的SSH密钥</a>并<a href="#生成新的SSH密钥">生成了一个新的SSH密钥</a>。将SSH密钥添加到代理时，请使用默认的macOS <code>ssh-add</code>命令，而不要使用<a href="https://www.macports.org/">macports</a>，<a href="http://brew.sh/">homebrew</a>或其他一些外部源安装的应用程序。</p><ol><li><p>在后台启动ssh-agent。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">eval</span> <span class="string">"<span class="variable">$(ssh-agent -s)</span>"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Agent pid 59566</span></span><br></pre></td></tr></table></figure></li><li><p>如果您使用的是macOS Sierra 10.12.2或更高版本，则需要修改<code>~/.ssh/config</code>文件以将密钥自动加载到ssh-agent中并将密码短语存储在密钥链中。</p><ul><li><p>首先，检查<code>~/.ssh/config</code>文件是否存在于默认位置。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> open ~/.ssh/config</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> The file /Users/you/.ssh/config does not exist.</span></span><br></pre></td></tr></table></figure></li><li><p>如果文件不存在，请创建文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> touch ~/.ssh/config</span></span><br></pre></td></tr></table></figure></li><li><p>打开<code>~/.ssh/config</code>文件，然后修改文件，<code>~/.ssh/id_rsa</code>如果您没有使用默认位置和<code>id_rsa</code>密钥名称，则将其替换。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host *</span><br><span class="line">  AddKeysToAgent yes</span><br><span class="line">  UseKeychain yes</span><br><span class="line">  IdentityFile ~&#x2F;.ssh&#x2F;id_rsa</span><br></pre></td></tr></table></figure></li></ul></li><li><p>将您的SSH私钥添加到ssh-agent并将密码短语存储在钥匙串中。如果您使用其他名称创建密钥，或者要添加具有其他名称的现有密钥，请使用私有密钥文件的名称替换命令中的<em>id_rsa</em>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh-add -K ~/.ssh/id_rsa</span></span><br></pre></td></tr></table></figure></li></ol><h5 id="GitHub账户添加新的SSH密钥"><a href="#GitHub账户添加新的SSH密钥" class="headerlink" title="GitHub账户添加新的SSH密钥"></a>GitHub账户添加新的SSH密钥</h5><p>在将新的SSH密钥添加到GitHub帐户之前，您应该具有：</p><ul><li><a href="#检查现有的SSH密钥">检查现有的SSH密钥</a></li><li><a href="#生成新的SSH密钥">生成一个新的SSH密钥并将其添加到ssh-agent</a></li></ul><p>将新的SSH密钥添加到GitHub帐户后，您可以重新配置任何本地存储库以使用SSH。有关更多信息，请参阅“将<a href="https://docs.github.com/en/articles/changing-a-remote-s-url/#switching-remote-urls-from-https-to-ssh">远程URL从HTTPS切换到SSH”</a>。</p><p><strong>注意：</strong>不再支持DSA密钥（SSH-DSS）。现有密钥将继续起作用，但是您不能将新的DSA密钥添加到GitHub帐户。</p><ol><li><p>将SSH密钥复制到剪贴板。</p><p>如果SSH密钥文件的名称与示例代码的名称不同，请修改文件名以匹配当前设置。复制密钥时，请勿添加任何换行符或空格。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pbcopy &lt; ~/.ssh/id_rsa.pub</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Copies the contents of the id_rsa.pub file to your clipboard</span></span><br></pre></td></tr></table></figure><p><strong>提示：</strong>如果<code>pbcopy</code>不起作用，则可以找到隐藏的<code>.ssh</code>文件夹，在您喜欢的文本编辑器中打开文件，然后将其复制到剪贴板。</p></li><li><p>在任何页面的右上角，点击您的个人资料照片，然后点击<strong>设置</strong>。</p><p><img src="https://docs.github.com/assets/images/help/settings/userbar-account-settings.png" alt="用户栏中的设置图标"></p></li></ol><ol start="3"><li><p>在用户设置边栏中，点击<strong>SSH和GPG密钥</strong>。</p><p><img src="https://docs.github.com/assets/images/help/settings/settings-sidebar-ssh-keys.png" alt="认证密钥"></p></li></ol><ol start="4"><li><p>单击“ <strong>新建SSH密钥”</strong>或“ <strong>添加SSH密钥”</strong>。</p><p><img src="https://docs.github.com/assets/images/help/settings/ssh-add-ssh-key.png" alt="SSH密钥按钮"></p></li></ol><ol start="5"><li><p>在“标题”字段中，为新密钥添加一个描述性标签。例如，如果您使用的是个人Mac，则可以将此键称为“个人MacBook Air”。</p></li><li><p>将您的密钥粘贴到“密钥”字段中。</p><p><img src="https://docs.github.com/assets/images/help/settings/ssh-key-paste.png" alt="关键领域"></p></li></ol><ol start="7"><li><p>单击<strong>添加SSH密钥</strong>。</p><p><img src="https://docs.github.com/assets/images/help/settings/ssh-add-key.png" alt="添加键按钮"></p></li></ol><ol start="8"><li><p>如果出现提示，请确认您的GitHub密码。</p><p><img src="https://docs.github.com/assets/images/help/settings/sudo_mode_popup.png" alt="Sudo模式对话框"></p></li></ol><h5 id="测试SSH连接"><a href="#测试SSH连接" class="headerlink" title="测试SSH连接"></a>测试SSH连接</h5><ol><li><p>打开终端。</p></li><li><p>输入以下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh -T git@github.com</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Attempts to ssh to GitHub</span></span><br></pre></td></tr></table></figure><p>您可能会看到如下警告：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> The authenticity of host <span class="string">'github.com (IP ADDRESS)'</span> can<span class="string">'t be established.</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Are you sure you want to <span class="built_in">continue</span> connecting (yes/no)?</span></span><br></pre></td></tr></table></figure><p>或像这样：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> The authenticity of host <span class="string">'github.com (IP ADDRESS)'</span> can<span class="string">'t be established.</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Are you sure you want to <span class="built_in">continue</span> connecting (yes/no)?</span></span><br></pre></td></tr></table></figure></li><li><p>验证您看到的消息中的指纹与步骤2中的消息之一匹配，然后键入<code>yes</code>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> Hi username! You<span class="string">'ve successfully authenticated, but GitHub does not</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> provide shell access.</span></span><br></pre></td></tr></table></figure></li></ol><p>以上Git SSH部分全部配置完成。</p><h4 id="Git-仓库配置"><a href="#Git-仓库配置" class="headerlink" title="Git 仓库配置"></a>Git 仓库配置</h4><p>首先打开github，点击New repository，创建一个新仓库，仓库名必须要遵守格式：账户名.github.io，不然接下来会有很多麻烦。并且需要勾选Initialize this repository with a README。如下图</p><p><img src="/images/git%E4%BB%93%E5%BA%931.jpg" alt=""></p><p>然后项目就建成了，点击<code>Settings</code>，向下拉到最后有个<code>GitHub Pages</code>，点击<code>Choose a theme</code>选择一个主题。然后等一会儿，再回到<code>GitHub Pages</code>，会变成下面这样：</p><p><img src="https://picb.zhimg.com/80/v2-281f7ca404cbb2b769f09c34794ac5b6_1440w.jpg" alt="img"></p><p>点击那个链接，就会出现自己的网页啦，效果如下：</p><p><img src="https://picb.zhimg.com/80/v2-3a0e46d3a6fa7e5ac9f585158cb76a88_1440w.jpg" alt="img"></p><p>以上Git仓库配置完毕！</p><h4 id="Hexo-配置"><a href="#Hexo-配置" class="headerlink" title="Hexo 配置"></a>Hexo 配置</h4><p>在安装Hexo的根目录下找到_config.yml文件，修改Deployment配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span>   <span class="comment">#连接方式</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:zzdespair/zzdespair.github.io.git</span>  <span class="comment">#地址 在下载Code中能看到</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span>  <span class="comment">#选择分支 默认master 主分支</span></span><br></pre></td></tr></table></figure><p>Hexo部署到git我们需要安装<code>hexo-deployer-git</code>插件,在bHexo的根目录下运行一下命令进行安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-deployer-git --save</span></span><br></pre></td></tr></table></figure><p>然后输入<code>hexo new post &quot;article title&quot;</code>，新建一篇文章。</p><p>然后打开Hexo<code>\source\_posts</code>的目录，可以发现下面多了一个文件夹和一个<code>.md</code>文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。</p><p>编写完markdown文件后，根目录下输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>可以本地预览效果，最后输入<code>hexo d</code>上传到github上。这时打开你的github.io主页就能看到发布的文章啦。</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>- [1] <a href="https://hexo.io/zh-cn/docs/">Hexo官方文档</a></p><p>- [2] <a href="https://www.jianshu.com/p/1bcad7700c46">简书-使用hexo搭建github博客</a></p><p>- [3] <a href="https://zhuanlan.zhihu.com/p/35668237">知乎-超详细Hexo+Github博客搭建小白教程</a></p><p>- [4] <a href="https://www.jianshu.com/p/6bbfa08aa0fa">简书-Hexo 搭建个人博客 #01 框架的本地安装与运行</a></p><p>- [5] <a href="https://www.fuocu.cn/archives/build-blog-website-by-hexo-github/">在本地搭建Hexo博客框架，并部署到Github</a></p><p>- [6] <a href="https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh">Connecting to GitHub with SSH</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;h4 id=&quot;安装前提，首先需要安装两个软件：&quot;&gt;&lt;a href=&quot;#安装前提，首先需要安装两个软件：&quot; class=&quot;headerlink&quot; title=&quot;安装前提，首先需要安装两个软件：&quot;&gt;&lt;/a&gt;安装前提，首先需要安装两个软件：&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;Node.js        &lt;font size=1&gt;用于安装Hexo&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;Git                &lt;font size=1&gt;用于代码提交和外网访问&lt;/font&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;详细的安装方式可自行根据自己的系统百度搜索安装方式，以下是参考网站：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot;&gt;https://hexo.io/zh-cn/docs/&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;安装-Hexo&quot;&gt;&lt;a href=&quot;#安装-Hexo&quot; class=&quot;headerlink&quot; title=&quot;安装 Hexo&quot;&gt;&lt;/a&gt;安装 Hexo&lt;/h4&gt;&lt;p&gt;以上两个软件装完后，即可通过npm安装Hexo&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; npm install -g hexo-cli&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="Hexo" scheme="zzdespair.github.io/tags/Hexo/"/>
    
      <category term="Blog" scheme="zzdespair.github.io/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="zzdespair.github.io/2020/08/04/hello-world/"/>
    <id>zzdespair.github.io/2020/08/04/hello-world/</id>
    <published>2020-08-04T10:07:34.555Z</published>
    <updated>2020-08-05T10:24:02.994Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
