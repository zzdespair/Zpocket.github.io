{"pages":[{"title":"","text":"唐艺昕 李沁 李一桐 gakki 图片搜集于互联网，侵权请留言，马上处理😊。","link":"/album/index.html"},{"title":"","text":"申请友链须知 原则上只和技术类博客交换，但不包括含有和色情、暴力、政治敏感的网站。 不和剽窃、侵权、无诚信的网站交换，优先和具有原创作品的网站交换。 申请请提供：站点名称、站点链接、站点描述、logo或头像（不要设置防盗链）。 排名不分先后，刷新后重排，更新信息后请留言告知。 会定期清理很久很久不更新的、不符合要求的友链，不再另行通知。 本站不存储友链图片，如果友链图片换了无法更新。图片裂了的会替换成默认图，需要更换的请留言告知。 本站友链信息如下，申请友链前请先添加本站信息： 网站图标：https://removeif.github.io/images/avatar.jpg 网站名称：辣椒の酱 网站地址：https://removeif.github.io 网站简介：后端开发，技术分享 加载中，稍等几秒...","link":"/friend/index.html"},{"title":"","text":"个人简介 分享很喜欢的老罗的一段话： “每一个生命来到世间都注定改变世界，别无选择。要么变得好一点，要么变得坏一点。你如果走进社会为了生存为了什么不要脸的理由，变成了一个恶心的成年人社会中的一员，那你就把这个世界变得恶心了一点点。如果你一生刚正不阿，如果你一生耿直，没有做任何恶心的事情，没做对别人有害的事情，一辈子拼了老命勉强把自己身边的几个人照顾好了，没有成名没有发财，没有成就伟大的事业，然后耿着脖子一生正直，到了七八十岁耿着脖子去世了。你这一生是不是没有改变世界？你还是改变世界了，你把这个世界变得美好了一点点。因为世界上又多了一个好人。“ 善恶终有报,天道好轮回。不信抬头看,苍天饶过谁。无论何时何地，我们都要保持一颗积极乐观、善良感恩的心。但行好事莫问前程，永远年轻，永远热内盈眶，永远保持正能量。💪💪💪💪💪💪冲鸭！！！！ -&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;个人信息：计算机科学与技术专业从事JAVA后端开发码畜一枚坚信代码改变世界 博客信息 网站采用的Icarus主题 追求尽可能的简洁，清晰，易用。 在Icarus主题之上进行了部分修改。 更新日志：–2020.01.18：icarus3.0适配–2019.11.17：增加深色主题开关–2019.10.30：去图，精简卡片–2019.10.22：改版部分显示，优化速度–2019.10.16：文章列表加上评论数显示–2019.10.13：改版评论–2019.09.25：图片、资源接入CDN免费jsDelivr、文章加入置顶–2019.09.19：开源博客代码–2019.09.19：修改布局，拉伸布局，更宽的展示–2019.09.18：修改友链ui为一行三个，并适配移动端，暗黑模式文章增加评论链接，增加留言链接–2019.09.14：增加精简next主题–2019.09.14：利用中秋节放假，重做了首页的热门推荐、加个widget最新评论框、归档页加入文章贡献概览面板 本站推荐索引 博客主题相关 github Issue 作为博客微型数据库的应用 github page网站cdn优化加速 博客源码分享 博客换肤的一种实现方式思路 博客中gitalk最新评论的获取 博客图片上传picgo工具github图传使用 安装、部分配置icarus主题中文版 技术知识点 Java并发知识点 法律法规 法律法规数据库 中华人民共和国国旗法 中华人民共和国宪法 中华人民共和国消费者权益保护法 中华人民共和国刑事诉讼法 中华人民共和国婚姻法 中华人名共和国网络安全法 中华人民共和国劳动法 其他 网易云音乐歌单分享 计划2020计划 2019.12.31 2020-GOALS 跑两三场马拉松 2019计划 2018.12.31/21:59:00-&gt;更新于2019.12.31 2019-GOALS 购买的专业书籍至少看完一遍（并发、重构、设计模式…）-&gt; 95% 额外： 追了很多剧 总结： 有优点有缺点，没坚持下来的还是太多，追了太多剧。以后多学习，多思考！ 时间轴记录","link":"/about/index.html"},{"title":"","text":"&nbsp;&nbsp;听听音乐 音乐播放器由mePlayer提供，布局参照网友博客所作，感谢作者的辛勤付出。更多音乐分享请查看歌单。 &nbsp;&nbsp;看看视频 ->点击以下条目开始播放视频,向下滑动查看更多","link":"/media/index.html"},{"title":"","text":"来而不往非礼也畅所欲言，有留必应","link":"/message/index.html"},{"title":"音乐歌单收藏","text":"--- 温馨提示：选择喜欢的音乐双击播放，由于版权原因部分不能播放。如果喜欢歌单收藏一下，去网易云都能播放哟！","link":"/music/index.html"},{"title":"","text":"碎碎念 tips：github登录后按时间正序查看、可点赞加❤️、本插件地址..「+99次查看」 碎碎念加载中，请稍等... $.getScript(\"/js/gitalk_self.min.js\", function () { var gitalk = new Gitalk({ clientID: '46a9f3481b46ea0129d8', clientSecret: '79c7c9cb847e141757d7864453bcbf89f0655b24', id: '666666', repo: 'issue_database', owner: 'removeif', admin: \"removeif\", createIssueManually: true, distractionFreeMode: false }); gitalk.render('comment-container1'); });","link":"/self-talking/index.html"}],"posts":[{"title":"Hexo 初次使用记录","text":"安装安装前提，首先需要安装两个软件： Node.js 用于安装Hexo Git 用于代码提交和外网访问 详细的安装方式可自行根据自己的系统百度搜索安装方式，以下是参考网站： https://hexo.io/zh-cn/docs/ 安装 Hexo以上两个软件装完后，即可通过npm安装Hexo 1$ npm install -g hexo-cli 然后执行以下命令指定的文件下会自动创建所需要的文件 123$ hexo init &lt;folder&gt; $ cd &lt;folder&gt;$ npm install 运行完成后会出现如下文字： 1INFO Start blogging with Hexo! 恭喜你，安装完成。 新建完后，指定文件夹下会出现的文件如下 12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 初步使用Hexo本地运行Hexo安装好后，执行以下命令: 12$ hexo g #generate 生成静态文件$ hexo s #server 启动服务器。默认情况下，访问网址为： [http://localhost:4000/](https://link.jianshu.com/?t=http://localhost:4000/) 123INFO Validating configINFO Start processingINFO Hexo is running at http://localhost:4000 . Press Ctrl+C to stop. 出现这段文字即可访问 http://localhost:4000 , 页面如下 至此，本地Hexo搭建完成 常用命令12345$ hexo n \"myblog\" # =&gt; hexo new \"myblog\"$ hexo p # =&gt; hexo publish$ hexo g # =&gt; hexo generate$ hexo s # =&gt; hexo server$ hexo d # =&gt; hexo deploy 服务器命令1234567$ hexo server # Hexo 会监视文件变动并自动更新，无须重启服务器$ hexo server -s # 静态模式$ hexo server -p 5000 # 更改端口$ hexo server -i 192.168.1.1 # 自定义 IP$ hexo clean # 清除缓存，网页正常情况下可以忽略此条命令$ hexo g # 生成静态网页$ hexo d # 开始部署 连接Hexo和GitGit SSH配置关于SSH使用SSH协议，您可以连接到远程服务器和服务并进行身份验证。使用SSH密钥，您可以连接到GitHub，而无需在每次访问时都提供用户名或密码。 检查现有的SSH密钥以下是Mac操作系统： 打开 Terminal. 输入ls -al ~/.ssh以查看是否存在现有的SSH密钥： 12$ ls -al ~/.ssh# Lists the files in your .ssh directory, if they exist 检查目录列表，以查看是否已经有公共SSH密钥。默认情况下，公共密钥的文件名是以下之一： id_rsa.pub id_ecdsa.pub id_ed25519.pub 如果您没有现有的公钥和私钥对，或者不希望使用任何可用于连接到GitHub，可以重新申请 如果您看到列出的现有公共和私有密钥对（例如id_rsa.pub和id_rsa），您希望将它们用于连接到GitHub，则可以将SSH密钥添加到ssh-agent。 生成新的SSH密钥 打开终端。 粘贴以下文本，替换为您的GitHub电子邮件地址。 1$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" 使用提供的电子邮件作为标签，这将创建一个新的ssh密钥。 1&gt; Generating public/private rsa key pair. 当提示您“输入要在其中保存密钥的文件”时，请按Enter。这接受默认文件位置。 1&gt; Enter a file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter] 在提示符下，键入一个安全密码。有关更多信息，请参阅“使用SSH密钥密码短语”。 12&gt; Enter passphrase (empty for no passphrase): [Type a passphrase]&gt; Enter same passphrase again: [Type passphrase again] 将SSH密钥添加到ssh-agent在将新的SSH密钥添加到ssh-agent来管理密钥之前，您应该已经检查了现有的SSH密钥并生成了一个新的SSH密钥。将SSH密钥添加到代理时，请使用默认的macOS ssh-add命令，而不要使用macports，homebrew或其他一些外部源安装的应用程序。 在后台启动ssh-agent。 12$ eval \"$(ssh-agent -s)\"&gt; Agent pid 59566 如果您使用的是macOS Sierra 10.12.2或更高版本，则需要修改~/.ssh/config文件以将密钥自动加载到ssh-agent中并将密码短语存储在密钥链中。 首先，检查~/.ssh/config文件是否存在于默认位置。 12$ open ~/.ssh/config&gt; The file /Users/you/.ssh/config does not exist. 如果文件不存在，请创建文件。 1$ touch ~/.ssh/config 打开~/.ssh/config文件，然后修改文件，~/.ssh/id_rsa如果您没有使用默认位置和id_rsa密钥名称，则将其替换。 1234Host * AddKeysToAgent yes UseKeychain yes IdentityFile ~/.ssh/id_rsa 将您的SSH私钥添加到ssh-agent并将密码短语存储在钥匙串中。如果您使用其他名称创建密钥，或者要添加具有其他名称的现有密钥，请使用私有密钥文件的名称替换命令中的id_rsa。 1$ ssh-add -K ~/.ssh/id_rsa GitHub账户添加新的SSH密钥在将新的SSH密钥添加到GitHub帐户之前，您应该具有： 检查现有的SSH密钥 生成一个新的SSH密钥并将其添加到ssh-agent 将新的SSH密钥添加到GitHub帐户后，您可以重新配置任何本地存储库以使用SSH。有关更多信息，请参阅“将远程URL从HTTPS切换到SSH”。 注意：不再支持DSA密钥（SSH-DSS）。现有密钥将继续起作用，但是您不能将新的DSA密钥添加到GitHub帐户。 将SSH密钥复制到剪贴板。 如果SSH密钥文件的名称与示例代码的名称不同，请修改文件名以匹配当前设置。复制密钥时，请勿添加任何换行符或空格。 12$ pbcopy &lt; ~/.ssh/id_rsa.pub# Copies the contents of the id_rsa.pub file to your clipboard 提示：如果pbcopy不起作用，则可以找到隐藏的.ssh文件夹，在您喜欢的文本编辑器中打开文件，然后将其复制到剪贴板。 在任何页面的右上角，点击您的个人资料照片，然后点击设置。 在用户设置边栏中，点击SSH和GPG密钥。 单击“ 新建SSH密钥”或“ 添加SSH密钥”。 在“标题”字段中，为新密钥添加一个描述性标签。例如，如果您使用的是个人Mac，则可以将此键称为“个人MacBook Air”。 将您的密钥粘贴到“密钥”字段中。 单击添加SSH密钥。 如果出现提示，请确认您的GitHub密码。 测试SSH连接 打开终端。 输入以下内容： 12$ ssh -T git@github.com# Attempts to ssh to GitHub 您可能会看到如下警告： 123&gt; The authenticity of host 'github.com (IP ADDRESS)' can't be established.&gt; RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.&gt; Are you sure you want to continue connecting (yes/no)? 或像这样： 123&gt; The authenticity of host 'github.com (IP ADDRESS)' can't be established.&gt; RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.&gt; Are you sure you want to continue connecting (yes/no)? 验证您看到的消息中的指纹与步骤2中的消息之一匹配，然后键入yes： 12&gt; Hi username! You've successfully authenticated, but GitHub does not&gt; provide shell access. 以上Git SSH部分全部配置完成。 Git 仓库配置首先打开github，点击New repository，创建一个新仓库，仓库名必须要遵守格式：账户名.github.io，不然接下来会有很多麻烦。并且需要勾选Initialize this repository with a README。如下图 然后项目就建成了，点击Settings，向下拉到最后有个GitHub Pages，点击Choose a theme选择一个主题。然后等一会儿，再回到GitHub Pages，会变成下面这样： 点击那个链接，就会出现自己的网页啦，效果如下： 以上Git仓库配置完毕！ Hexo 配置在安装Hexo的根目录下找到_config.yml文件，修改Deployment配置 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git #连接方式 repository: git@github.com:zzdespair/zzdespair.github.io.git #地址 在下载Code中能看到 branch: master #选择分支 默认master 主分支 Hexo部署到git我们需要安装hexo-deployer-git插件,在bHexo的根目录下运行一下命令进行安装 1$ npm install hexo-deployer-git --save 然后输入hexo new post &quot;article title&quot;，新建一篇文章。 然后打开Hexo\\source\\_posts的目录，可以发现下面多了一个文件夹和一个.md文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。 编写完markdown文件后，根目录下输入hexo g生成静态网页，然后输入hexo s可以本地预览效果，最后输入hexo d上传到github上。这时打开你的github.io主页就能看到发布的文章啦。 参考文章- [1] Hexo官方文档 - [2] 简书-使用hexo搭建github博客 - [3] 知乎-超详细Hexo+Github博客搭建小白教程 - [4] 简书-Hexo 搭建个人博客 #01 框架的本地安装与运行 - [5] 在本地搭建Hexo博客框架，并部署到Github - [6] Connecting to GitHub with SSH","link":"/2020/08/04/hello-hexo/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2020/08/04/hello-world/"}],"tags":[{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"Blog","slug":"Blog","link":"/tags/Blog/"}],"categories":[]}